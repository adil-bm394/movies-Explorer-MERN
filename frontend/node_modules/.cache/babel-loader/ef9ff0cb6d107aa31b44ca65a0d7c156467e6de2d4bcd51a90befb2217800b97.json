{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  movies: [],\n  loading: false,\n  error: null\n};\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/v1/movies\");\n  return response.data;\n});\n\n// Thunk to add a comment\nexport const addComment = createAsyncThunk(\"movies/addComment\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(token, \"gg\");\n    const response = await axios.post(`http://localhost:8000/api/v1/addComments/${payload.movieId}`, {\n      commentText: payload.comment,\n      userId: payload.userId,\n      userName: payload.userName,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      movieId: payload.movieId,\n      comment: response.data.comment\n    };\n  } catch (error) {\n    var _axiosError$response;\n    const axiosError = error;\n    return rejectWithValue(((_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : _axiosError$response.data) || \"Unknown error\");\n  }\n});\n\n// Thunk to fetch comments\nexport const fetchComments = createAsyncThunk(\"movies/fetchComments\", async (movieId, {\n  rejectWithValue\n}) => {\n  console.log(\"movieId\", movieId);\n  try {\n    const response = await axios.get(`http://localhost:8000/api/v1/fetchComments/${movieId}`);\n    console.log(\"comments\", response.data.comments);\n    return {\n      movieId,\n      comments: response.data.comments\n    };\n  } catch (error) {\n    var _axiosError$response2;\n    const axiosError = error;\n    return rejectWithValue(((_axiosError$response2 = axiosError.response) === null || _axiosError$response2 === void 0 ? void 0 : _axiosError$response2.data) || \"Unknown error\");\n  }\n});\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addRating: (state, action) => {\n      const {\n        movieId,\n        rating,\n        userId,\n        userName\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.ratings.push({\n          userId,\n          userName,\n          rating\n        });\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMovies.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovies.fulfilled, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.movies = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.movies;\n    }).addCase(fetchMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch movies\";\n    }).addCase(addComment.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(addComment.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        movieId,\n        comment\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.comments.push(comment); // Update comments\n      }\n    }).addCase(addComment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to add comment\";\n    }).addCase(fetchComments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchComments.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        movieId,\n        comments\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.comments = comments; // Update comments\n      }\n    }).addCase(fetchComments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch comments\";\n    });\n  }\n});\nexport const {\n  addRating\n} = moviesSlice.actions;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","movies","loading","error","fetchMovies","response","get","data","addComment","payload","rejectWithValue","console","log","token","post","movieId","commentText","comment","userId","userName","headers","Authorization","_axiosError$response","axiosError","fetchComments","comments","_axiosError$response2","moviesSlice","name","reducers","addRating","state","action","rating","movie","find","m","_id","ratings","push","extraReducers","builder","addCase","pending","fulfilled","_action$payload","rejected","message","actions","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/moviesSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie, MoviesState } from \"../../utils/interface/types\";\nimport { AxiosError } from \"axios\";\n\nconst initialState: MoviesState = {\n  movies: [],\n  loading: false,\n  error: null,\n};\n\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/v1/movies\");\n  return response.data;\n});\n\n// Thunk to add a comment\nexport const addComment = createAsyncThunk(\n  \"movies/addComment\",\n  async (\n    payload: {\n      movieId: string;\n      comment: string;\n      userId: string;\n      userName: string;\n    },\n    { rejectWithValue }\n    \n  ) => {\n    try {\n      \n      console.log(token, \"gg\");\n      const response = await axios.post(\n        `http://localhost:8000/api/v1/addComments/${payload.movieId}`,\n        {\n          commentText: payload.comment,\n          userId: payload.userId,\n          userName: payload.userName,\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      return { movieId: payload.movieId, comment: response.data.comment };\n    } catch (error) {\n      const axiosError = error as AxiosError;\n      return rejectWithValue(axiosError.response?.data || \"Unknown error\");\n    }\n  }\n);\n\n// Thunk to fetch comments\nexport const fetchComments = createAsyncThunk(\n  \"movies/fetchComments\",\n  async (movieId: string, { rejectWithValue }) => {\n    console.log(\"movieId\", movieId);\n    try {\n      const response = await axios.get(\n        `http://localhost:8000/api/v1/fetchComments/${movieId}`\n      );\n\n      console.log(\"comments\", response.data.comments);\n\n      return { movieId, comments: response.data.comments };\n    } catch (error) {\n      const axiosError = error as AxiosError;\n      return rejectWithValue(axiosError.response?.data || \"Unknown error\");\n    }\n  }\n);\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addRating: (\n      state,\n      action: PayloadAction<{\n        movieId: string;\n        rating: number;\n        userId: string;\n        userName: string;\n      }>\n    ) => {\n      const { movieId, rating, userId, userName } = action.payload;\n      const movie = state.movies.find((m) => m._id === movieId);\n      if (movie) {\n        movie.ratings.push({ userId, userName, rating });\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovies.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchMovies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.movies = action.payload?.movies;\n      })\n      .addCase(fetchMovies.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch movies\";\n      })\n      .addCase(addComment.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(addComment.fulfilled, (state, action) => {\n        state.loading = false;\n        const { movieId, comment } = action.payload;\n        const movie = state.movies.find((m) => m._id === movieId);\n        if (movie) {\n          movie.comments.push(comment); // Update comments\n        }\n      })\n\n      .addCase(addComment.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to add comment\";\n      })\n      .addCase(fetchComments.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchComments.fulfilled, (state, action) => {\n        state.loading = false;\n        const { movieId, comments } = action.payload;\n        const movie = state.movies.find((m) => m._id === movieId);\n        if (movie) {\n          movie.comments = comments; // Update comments\n        }\n      })\n      .addCase(fetchComments.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch comments\";\n      });\n  },\n});\n\nexport const { addRating } = moviesSlice.actions;\nexport default moviesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}