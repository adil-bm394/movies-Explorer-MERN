{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const initialState={isLoggedIn:false,userDetails:null};const getInitialState=()=>{const token=localStorage.getItem(\"authToken\");if(token){const userDetails=JSON.parse(localStorage.getItem(\"userDetails\")||\"{}\");return{isLoggedIn:true,userDetails:{...userDetails,token}};}return initialState;};const userSlice=createSlice({name:\"user\",initialState:getInitialState(),reducers:{login:(state,action)=>{state.isLoggedIn=true;state.userDetails=action.payload;localStorage.setItem(\"authToken\",action.payload.token);localStorage.setItem(\"userDetails\",JSON.stringify(action.payload));},logout:state=>{state.isLoggedIn=false;state.userDetails=null;localStorage.removeItem(\"authToken\");localStorage.removeItem(\"userDetails\");}}});export const{login,logout}=userSlice.actions;export default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","userDetails","getInitialState","token","localStorage","getItem","JSON","parse","userSlice","name","reducers","login","state","action","payload","setItem","stringify","logout","removeItem","actions","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/userSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserState } from \"../../utils/interface/types\";\n\nconst initialState: UserState = {\n  isLoggedIn: false,\n  userDetails: null,\n};\n\nconst getInitialState = (): UserState => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\") || \"{}\");\n    return {\n      isLoggedIn: true,\n      userDetails: {\n        ...userDetails,\n        token,\n      },\n    };\n  }\n  return initialState;\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: getInitialState(),\n  reducers: {\n    login: (\n      state,\n      action: PayloadAction<{\n        id?: string;\n        name: string;\n        email: string;\n        phone: string;\n        token: string;\n      }>\n    ) => {\n      state.isLoggedIn = true;\n      state.userDetails = action.payload;\n      localStorage.setItem(\"authToken\", action.payload.token);\n      localStorage.setItem(\"userDetails\", JSON.stringify(action.payload));\n    },\n    logout: (state) => {\n      state.isLoggedIn = false;\n      state.userDetails = null;\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userDetails\");\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAG7D,KAAM,CAAAC,YAAuB,CAAG,CAC9BC,UAAU,CAAE,KAAK,CACjBC,WAAW,CAAE,IACf,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAiB,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC/C,GAAIF,KAAK,CAAE,CACT,KAAM,CAAAF,WAAW,CAAGK,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAI,IAAI,CAAC,CAC3E,MAAO,CACLL,UAAU,CAAE,IAAI,CAChBC,WAAW,CAAE,CACX,GAAGA,WAAW,CACdE,KACF,CACF,CAAC,CACH,CACA,MAAO,CAAAJ,YAAY,CACrB,CAAC,CAED,KAAM,CAAAS,SAAS,CAAGV,WAAW,CAAC,CAC5BW,IAAI,CAAE,MAAM,CACZV,YAAY,CAAEG,eAAe,CAAC,CAAC,CAC/BQ,QAAQ,CAAE,CACRC,KAAK,CAAEA,CACLC,KAAK,CACLC,MAME,GACC,CACHD,KAAK,CAACZ,UAAU,CAAG,IAAI,CACvBY,KAAK,CAACX,WAAW,CAAGY,MAAM,CAACC,OAAO,CAClCV,YAAY,CAACW,OAAO,CAAC,WAAW,CAAEF,MAAM,CAACC,OAAO,CAACX,KAAK,CAAC,CACvDC,YAAY,CAACW,OAAO,CAAC,aAAa,CAAET,IAAI,CAACU,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC,CACrE,CAAC,CACDG,MAAM,CAAGL,KAAK,EAAK,CACjBA,KAAK,CAACZ,UAAU,CAAG,KAAK,CACxBY,KAAK,CAACX,WAAW,CAAG,IAAI,CACxBG,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC,CACpCd,YAAY,CAACc,UAAU,CAAC,aAAa,CAAC,CACxC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEP,KAAK,CAAEM,MAAO,CAAC,CAAGT,SAAS,CAACW,OAAO,CAClD,cAAe,CAAAX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}