{"ast":null,"code":"import * as yup from \"yup\";\nconst registerSchema = yup.object().shape({\n  name: yup.string().min(2, \"Name must be at least 2 characters\").max(50, \"Name can be at most 50 characters\").required(\"Name is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  phone: yup.string().matches(/^[0-9]{10}$/, \"Phone number must be exactly 10 digits\").required(\"Phone number is required\"),\n  password: yup.string().min(8, \"Password must be at least 8 characters\").matches(/[A-Z]/, \"Password must contain at least one uppercase letter\").matches(/[^A-Za-z0-9]/, \"Password must contain at least one special character\").required(\"Password is required\")\n});\nconst LoginSchema = yup.object().shape({});\nmodule.exports = {\n  registerSchema,\n  LoginSchema\n};","map":{"version":3,"names":["yup","registerSchema","object","shape","name","string","min","max","required","email","phone","matches","password","LoginSchema","module","exports"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/ValidatioSchema/ValidationSchema.tsx"],"sourcesContent":["import * as yup from \"yup\";\n\nconst registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, \"Name must be at least 2 characters\")\n    .max(50, \"Name can be at most 50 characters\")\n    .required(\"Name is required\"),\n\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n\n  phone: yup\n    .string()\n    .matches(/^[0-9]{10}$/, \"Phone number must be exactly 10 digits\")\n    .required(\"Phone number is required\"),\n\n  password: yup\n    .string()\n    .min(8, \"Password must be at least 8 characters\")\n    .matches(/[A-Z]/, \"Password must contain at least one uppercase letter\")\n    .matches(\n      /[^A-Za-z0-9]/,\n      \"Password must contain at least one special character\"\n    )\n    .required(\"Password is required\"),\n});\n\n\nconst LoginSchema = yup.object().shape({\n  \n});\n\nmodule.exports = { registerSchema, LoginSchema };\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,cAAc,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACxCC,IAAI,EAAEJ,GAAG,CACNK,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,EAAE,oCAAoC,CAAC,CAC5CC,GAAG,CAAC,EAAE,EAAE,mCAAmC,CAAC,CAC5CC,QAAQ,CAAC,kBAAkB,CAAC;EAE/BC,KAAK,EAAET,GAAG,CAACK,MAAM,CAAC,CAAC,CAACI,KAAK,CAAC,eAAe,CAAC,CAACD,QAAQ,CAAC,mBAAmB,CAAC;EAExEE,KAAK,EAAEV,GAAG,CACPK,MAAM,CAAC,CAAC,CACRM,OAAO,CAAC,aAAa,EAAE,wCAAwC,CAAC,CAChEH,QAAQ,CAAC,0BAA0B,CAAC;EAEvCI,QAAQ,EAAEZ,GAAG,CACVK,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDK,OAAO,CAAC,OAAO,EAAE,qDAAqD,CAAC,CACvEA,OAAO,CACN,cAAc,EACd,sDACF,CAAC,CACAH,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAGF,MAAMK,WAAW,GAAGb,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CAEvC,CAAC,CAAC;AAEFW,MAAM,CAACC,OAAO,GAAG;EAAEd,cAAc;EAAEY;AAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}