{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchRatings } from \"../../redux/slices/moviesSlice\";\nimport RatingComponent from \"./RatingComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingDisplayComponent = ({\n  movieId,\n  handleRatingClick,\n  onRatingsFetched\n}) => {\n  _s();\n  const dispatch = useDispatch(); // Apply the correct type\n  const {\n    isLoggedIn,\n    userDetails\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const fetchRatingsData = async () => {\n      try {\n        const response = await dispatch(fetchRatings(movieId)).unwrap();\n        onRatingsFetched(response.ratings);\n      } catch (error) {\n        console.error(\"Failed to fetch ratings\", error);\n      }\n    };\n    fetchRatingsData();\n  }, [movieId, dispatch, onRatingsFetched]);\n  return /*#__PURE__*/_jsxDEV(RatingComponent, {\n    isLoggedIn: isLoggedIn,\n    initialRating: null,\n    movieId: movieId,\n    userId: (userDetails === null || userDetails === void 0 ? void 0 : userDetails.id) || \"\",\n    userName: (userDetails === null || userDetails === void 0 ? void 0 : userDetails.name) || \"\",\n    handleRatingClick: handleRatingClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingDisplayComponent, \"tss0du4UodkSaY75LsWfyN+VddA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RatingDisplayComponent;\nexport default RatingDisplayComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingDisplayComponent\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchRatings","RatingComponent","jsxDEV","_jsxDEV","RatingDisplayComponent","movieId","handleRatingClick","onRatingsFetched","_s","dispatch","isLoggedIn","userDetails","state","user","fetchRatingsData","response","unwrap","ratings","error","console","initialRating","userId","id","userName","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { fetchRatings } from \"../../redux/slices/moviesSlice\";\nimport RatingComponent from \"./RatingComponent\";\n\ninterface RatingDisplayComponentProps {\n  movieId: string;\n  handleRatingClick: (value: number) => void;\n  onRatingsFetched: (\n    ratings: { userId: string; userName: string; rating: number }[]\n  ) => void;\n}\n\nconst RatingDisplayComponent: React.FC<RatingDisplayComponentProps> = ({\n  movieId,\n  handleRatingClick,\n  onRatingsFetched,\n}) => {\n  const dispatch: AppDispatch = useDispatch(); // Apply the correct type\n  const { isLoggedIn, userDetails } = useSelector(\n    (state: RootState) => state.user\n  );\n\n  useEffect(() => {\n    const fetchRatingsData = async () => {\n      try {\n        const response = await dispatch(fetchRatings(movieId)).unwrap();\n        onRatingsFetched(response.ratings);\n      } catch (error) {\n        console.error(\"Failed to fetch ratings\", error);\n      }\n    };\n\n    fetchRatingsData();\n  }, [movieId, dispatch, onRatingsFetched]);\n\n  return (\n    <RatingComponent\n      isLoggedIn={isLoggedIn}\n      initialRating={null}\n      movieId={movieId}\n      userId={userDetails?.id || \"\"}\n      userName={userDetails?.name || \"\"}\n      handleRatingClick={handleRatingClick}\n    />\n  );\n};\n\nexport default RatingDisplayComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhD,MAAMC,sBAA6D,GAAGA,CAAC;EACrEC,OAAO;EACPC,iBAAiB;EACjBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAqB,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM;IAAEW,UAAU;IAAEC;EAAY,CAAC,GAAGb,WAAW,CAC5Cc,KAAgB,IAAKA,KAAK,CAACC,IAC9B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACT,YAAY,CAACK,OAAO,CAAC,CAAC,CAACW,MAAM,CAAC,CAAC;QAC/DT,gBAAgB,CAACQ,QAAQ,CAACE,OAAO,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACT,OAAO,EAAEI,QAAQ,EAAEF,gBAAgB,CAAC,CAAC;EAEzC,oBACEJ,OAAA,CAACF,eAAe;IACdS,UAAU,EAAEA,UAAW;IACvBU,aAAa,EAAE,IAAK;IACpBf,OAAO,EAAEA,OAAQ;IACjBgB,MAAM,EAAE,CAAAV,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,EAAE,KAAI,EAAG;IAC9BC,QAAQ,EAAE,CAAAZ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEa,IAAI,KAAI,EAAG;IAClClB,iBAAiB,EAAEA;EAAkB;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEN,CAAC;AAACpB,EAAA,CAjCIJ,sBAA6D;EAAA,QAKnCL,WAAW,EACLD,WAAW;AAAA;AAAA+B,EAAA,GAN3CzB,sBAA6D;AAmCnE,eAAeA,sBAAsB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}