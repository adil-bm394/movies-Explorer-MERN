{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  movies: [],\n  loading: false,\n  error: null\n};\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/v1/movies\");\n  return response.data;\n});\n\n// Thunk to add a comment\nexport const addComment = createAsyncThunk(\"movies/addComment\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/api/v1/addComments/${payload.movieId}`, {\n      commentText: payload.comment,\n      userId: payload.userId,\n      userName: payload.userName\n    });\n    return {\n      movieId: payload.movieId,\n      comment: response.data.comment\n    };\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk to fetch comments\nexport const fetchComments = createAsyncThunk(\"movies/fetchComments\", async (movieId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`http://localhost:8000/api/v1/fetchComments/${movieId}`);\n    return {\n      movieId,\n      comments: response.data.comments\n    };\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addRating: (state, action) => {\n      const {\n        movieId,\n        rating,\n        userId,\n        userName\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.ratings.push({\n          userId,\n          userName,\n          rating\n        });\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMovies.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovies.fulfilled, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.movies = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.movies;\n    }).addCase(fetchMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch movies\";\n    }).addCase(addComment.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(addComment.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        movieId,\n        comment\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.comments.push(comment);\n      }\n    }).addCase(addComment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to add comment\";\n    }).addCase(fetchComments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchComments.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        movieId,\n        comments\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.comments = comments;\n      }\n    }).addCase(fetchComments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch comments\";\n    });\n  }\n});\nexport const {\n  addRating\n} = moviesSlice.actions;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","movies","loading","error","fetchMovies","response","get","data","addComment","payload","rejectWithValue","post","movieId","commentText","comment","userId","userName","fetchComments","comments","moviesSlice","name","reducers","addRating","state","action","rating","movie","find","m","_id","ratings","push","extraReducers","builder","addCase","pending","fulfilled","_action$payload","rejected","message","actions","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/moviesSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie, MoviesState } from \"../../utils/interface/types\";\n\nconst initialState: MoviesState = {\n  movies: [],\n  loading: false,\n  error: null,\n};\n\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/v1/movies\");\n  return response.data;\n});\n\n// Thunk to add a comment\nexport const addComment = createAsyncThunk(\n  \"movies/addComment\",\n  async (\n    payload: {\n      movieId: string;\n      comment: string;\n      userId: string;\n      userName: string;\n    },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/v1/addComments/${payload.movieId}`,\n        {\n          commentText: payload.comment,\n          userId: payload.userId,\n          userName: payload.userName,\n        }\n      );\n      return { movieId: payload.movieId, comment: response.data.comment };\n    } catch (error:any) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk to fetch comments\nexport const fetchComments = createAsyncThunk(\n  \"movies/fetchComments\",\n  async (movieId: string, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8000/api/v1/fetchComments/${movieId}`\n      );\n      return { movieId, comments: response.data.comments };\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addRating: (\n      state,\n      action: PayloadAction<{\n        movieId: string;\n        rating: number;\n        userId: string;\n        userName: string;\n      }>\n    ) => {\n      const { movieId, rating, userId, userName } = action.payload;\n      const movie = state.movies.find((m) => m._id === movieId);\n      if (movie) {\n        movie.ratings.push({ userId, userName, rating });\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovies.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchMovies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.movies = action.payload?.movies;\n      })\n      .addCase(fetchMovies.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch movies\";\n      })\n      .addCase(addComment.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(addComment.fulfilled, (state, action) => {\n        state.loading = false;\n        const { movieId, comment } = action.payload;\n        const movie = state.movies.find((m) => m._id === movieId);\n        if (movie) {\n          movie.comments.push(comment);\n        }\n      })\n      .addCase(addComment.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to add comment\";\n      })\n      .addCase(fetchComments.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchComments.fulfilled, (state, action) => {\n        state.loading = false;\n        const { movieId, comments } = action.payload;\n        const movie = state.movies.find((m) => m._id === movieId);\n        if (movie) {\n          movie.comments = comments;\n        }\n      })\n      .addCase(fetchComments.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch comments\";\n      });\n  },\n});\n\nexport const { addRating } = moviesSlice.actions;\nexport default moviesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}