{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  favorites: [],\n  loading: false,\n  error: null\n};\nexport const addFavorite = createAsyncThunk(\"favorites/addFavorite\", async (movie, {\n  rejectWithValue,\n  getState\n}) => {\n  const state = getState();\n  const token = state.user.token; // assuming you have token in your state\n\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/v1/addFavorite\", {\n      movieId: movie.imdbID\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nexport const removeFavorite = createAsyncThunk(\"favorites/removeFavorite\", async (imdbID, {\n  rejectWithValue,\n  getState\n}) => {\n  const state = getState();\n  const token = state.user.token; // assuming you have token in your state\n\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/v1/removeFavorite\", {\n      movieId: imdbID\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(addFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites.push(action.payload.movie);\n    }).addCase(addFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(removeFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(removeFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites = state.favorites.filter(movie => movie.imdbID !== action.payload.movieId);\n    }).addCase(removeFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","initialState","favorites","loading","error","addFavorite","movie","rejectWithValue","getState","state","token","user","response","post","movieId","imdbID","headers","Authorization","data","message","removeFavorite","favoritesSlice","name","reducers","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","filter","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/favoritesSlice.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Movie } from \"../../utils/interface/types\";\n\ninterface FavoritesState {\n  favorites: Movie[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: FavoritesState = {\n  favorites: [],\n  loading: false,\n  error: null,\n};\n\nexport const addFavorite = createAsyncThunk(\n  \"favorites/addFavorite\",\n  async (movie: Movie, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const token = state.user.token; // assuming you have token in your state\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/v1/addFavorite\",\n        { movieId: movie.imdbID },\n        { headers: { Authorization: token } }\n      );\n      return response.data;\n    } catch (error: any) {\n      return rejectWithValue(\n        error.response ? error.response.data : error.message\n      );\n    }\n  }\n);\n\nexport const removeFavorite = createAsyncThunk(\n  \"favorites/removeFavorite\",\n  async (imdbID: string, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const token = state.user.token; // assuming you have token in your state\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/v1/removeFavorite\",\n        { movieId: imdbID },\n        { headers: { Authorization: token } }\n      );\n      return response.data;\n    } catch (error: any) {\n      return rejectWithValue(\n        error.response ? error.response.data : error.message\n      );\n    }\n  }\n);\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(addFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(addFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites.push(action.payload.movie);\n      })\n      .addCase(addFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(removeFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(removeFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites = state.favorites.filter(\n          (movie) => movie.imdbID !== action.payload.movieId\n        );\n      })\n      .addCase(removeFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport default favoritesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}