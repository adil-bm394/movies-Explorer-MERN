{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingDisplayComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchRatings } from \"../../redux/slices/moviesSlice\";\nimport RatingComponent from \"./RatingComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingDisplayComponent = ({\n  movieId,\n  onRatingClick,\n  onRatingsFetched\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const userId = useSelector(state => state.user.id);\n  const userName = useSelector(state => state.user.userName);\n  useEffect(() => {\n    const fetchRatingsData = async () => {\n      try {\n        const response = await dispatch(fetchRatings(movieId)).unwrap();\n        onRatingsFetched(response.ratings);\n      } catch (error) {\n        console.error(\"Failed to fetch ratings\", error);\n      }\n    };\n    fetchRatingsData();\n  }, [movieId, dispatch, onRatingsFetched]);\n  return /*#__PURE__*/_jsxDEV(RatingComponent, {\n    isLoggedIn: isLoggedIn,\n    initialRating: null,\n    movieId: movieId,\n    userId: userId,\n    userName: userName,\n    onRatingClick: onRatingClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingDisplayComponent, \"huC263vD0cqMFeGqisaxHv8pMbg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = RatingDisplayComponent;\nexport default RatingDisplayComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingDisplayComponent\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchRatings","RatingComponent","jsxDEV","_jsxDEV","RatingDisplayComponent","movieId","onRatingClick","onRatingsFetched","_s","dispatch","isLoggedIn","state","user","userId","id","userName","fetchRatingsData","response","unwrap","ratings","error","console","initialRating","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingDisplayComponent.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\nimport { fetchRatings } from \"../../redux/slices/moviesSlice\";\nimport RatingComponent from \"./RatingComponent\";\n\ninterface RatingDisplayComponentProps {\n  movieId: string;\n  onRatingClick: (value: number) => void;\n  onRatingsFetched: (\n    ratings: { userId: string; userName: string; rating: number }[]\n  ) => void;\n}\n\nconst RatingDisplayComponent: React.FC<RatingDisplayComponentProps> = ({\n  movieId,\n  onRatingClick,\n  onRatingsFetched,\n}) => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const userId = useSelector((state: RootState) => state.user.id);\n  const userName = useSelector((state: RootState) => state.user.userName);\n\n  useEffect(() => {\n    const fetchRatingsData = async () => {\n      try {\n        const response = await dispatch(fetchRatings(movieId)).unwrap();\n        onRatingsFetched(response.ratings);\n      } catch (error) {\n        console.error(\"Failed to fetch ratings\", error);\n      }\n    };\n\n    fetchRatingsData();\n  }, [movieId, dispatch, onRatingsFetched]);\n\n  return (\n    <RatingComponent\n      isLoggedIn={isLoggedIn}\n      initialRating={null}\n      movieId={movieId}\n      userId={userId}\n      userName={userName}\n      onRatingClick={onRatingClick}\n    />\n  );\n};\n\nexport default RatingDisplayComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhD,MAAMC,sBAA6D,GAAGA,CAAC;EACrEC,OAAO;EACPC,aAAa;EACbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,UAAU,GAAGZ,WAAW,CAAEa,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,MAAM,GAAGf,WAAW,CAAEa,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACE,EAAE,CAAC;EAC/D,MAAMC,QAAQ,GAAGjB,WAAW,CAAEa,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACG,QAAQ,CAAC;EAEvElB,SAAS,CAAC,MAAM;IACd,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACT,YAAY,CAACK,OAAO,CAAC,CAAC,CAACa,MAAM,CAAC,CAAC;QAC/DX,gBAAgB,CAACU,QAAQ,CAACE,OAAO,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACX,OAAO,EAAEI,QAAQ,EAAEF,gBAAgB,CAAC,CAAC;EAEzC,oBACEJ,OAAA,CAACF,eAAe;IACdS,UAAU,EAAEA,UAAW;IACvBY,aAAa,EAAE,IAAK;IACpBjB,OAAO,EAAEA,OAAQ;IACjBQ,MAAM,EAAEA,MAAO;IACfE,QAAQ,EAAEA,QAAS;IACnBT,aAAa,EAAEA;EAAc;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEN,CAAC;AAAClB,EAAA,CAjCIJ,sBAA6D;EAAA,QAKhDL,WAAW,EACTD,WAAW,EACfA,WAAW,EACTA,WAAW;AAAA;AAAA6B,EAAA,GARxBvB,sBAA6D;AAmCnE,eAAeA,sBAAsB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}