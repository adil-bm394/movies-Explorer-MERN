{"ast":null,"code":"import{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{fetchMovies}from\"../redux/slices/moviesSlice\";const useFetchMovies=()=>{const dispatch=useDispatch();const{movies,loading,error}=useSelector(state=>state.movies);useEffect(()=>{dispatch(fetchMovies());},[dispatch]);return{movies,loading,error};};export default useFetchMovies;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","fetchMovies","useFetchMovies","dispatch","movies","loading","error","state"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/hooks/useFetchMovies.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovies } from \"../redux/slices/moviesSlice\";\nimport { RootState, AppDispatch } from \"../redux/store\";\n\nconst useFetchMovies = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const { movies, loading, error } = useSelector(\n    (state: RootState) => state.movies\n  );\n\n  useEffect(() => {\n    dispatch(fetchMovies());\n  }, [dispatch]);\n\n  return { movies, loading, error };\n};\n\nexport default useFetchMovies;\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,KAAQ,6BAA6B,CAGzD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,QAAqB,CAAGJ,WAAW,CAAC,CAAC,CAC3C,KAAM,CAAEK,MAAM,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGN,WAAW,CAC3CO,KAAgB,EAAKA,KAAK,CAACH,MAC9B,CAAC,CAEDN,SAAS,CAAC,IAAM,CACdK,QAAQ,CAACF,WAAW,CAAC,CAAC,CAAC,CACzB,CAAC,CAAE,CAACE,QAAQ,CAAC,CAAC,CAEd,MAAO,CAAEC,MAAM,CAAEC,OAAO,CAAEC,KAAM,CAAC,CACnC,CAAC,CAED,cAAe,CAAAJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}