{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// Define initial state\nconst initialState = {\n  movies: [],\n  loading: false,\n  error: null\n};\n\n// Thunk to fetch movies\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/v1/movies\");\n  return response.data;\n});\n\n// Thunk to add a comment\nexport const addComment = createAsyncThunk(\"movies/addComment\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/api/v1/addComments/${payload.movieId}`, {\n      commentText: payload.comment\n    }, {\n      headers: {\n        Authorization: `Bearer YOUR_TOKEN_HERE` // Replace with actual token if needed\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk to fetch comments for a movie\nexport const fetchComments = createAsyncThunk(\"movies/fetchComments\", async (movieId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`http://localhost:8000/api/v1/fetchComments/${movieId}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addRating: (state, action) => {\n      const {\n        movieId,\n        rating,\n        userId,\n        userName\n      } = action.payload;\n      const movie = state.movies.find(m => m._id === movieId);\n      if (movie) {\n        movie.ratings.push({\n          userId,\n          userName,\n          rating\n        });\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMovies.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovies.fulfilled, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.movies = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.movies;\n    }).addCase(fetchMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch movies\";\n    }).addCase(addComment.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(addComment.fulfilled, (state, action) => {\n      state.loading = false;\n      // Optionally handle the added comment in the state if needed\n    }).addCase(addComment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to add comment\";\n    }).addCase(fetchComments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchComments.fulfilled, (state, action) => {\n      state.loading = false;\n      const movie = state.movies.find(m => m._id === action.payload.movieId);\n      if (movie) {\n        movie.comments = action.payload.comments;\n      }\n    }).addCase(fetchComments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch comments\";\n    });\n  }\n});\nexport const {\n  addRating\n} = moviesSlice.actions;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","movies","loading","error","fetchMovies","response","get","data","addComment","payload","rejectWithValue","post","movieId","commentText","comment","headers","Authorization","fetchComments","moviesSlice","name","reducers","addRating","state","action","rating","userId","userName","movie","find","m","_id","ratings","push","extraReducers","builder","addCase","pending","fulfilled","_action$payload","rejected","message","comments","actions","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/moviesSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie, MoviesState } from \"../../utils/interface/types\";\n\n// Define initial state\nconst initialState: MoviesState = {\n  movies: [],\n  loading: false,\n  error: null,\n};\n\n// Thunk to fetch movies\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/v1/movies\");\n  return response.data;\n});\n\n// Thunk to add a comment\nexport const addComment = createAsyncThunk(\n  \"movies/addComment\",\n  async (\n    payload: {\n      movieId: string;\n      comment: string;\n      userId: string;\n      userName: string;\n    },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/v1/addComments/${payload.movieId}`,\n        {\n          commentText: payload.comment,\n        },\n        {\n          headers: {\n            Authorization: `Bearer YOUR_TOKEN_HERE`, // Replace with actual token if needed\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk to fetch comments for a movie\nexport const fetchComments = createAsyncThunk(\n  \"movies/fetchComments\",\n  async (movieId: string, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8000/api/v1/fetchComments/${movieId}`\n      );\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addRating: (\n      state,\n      action: PayloadAction<{\n        movieId: string;\n        rating: number;\n        userId: string;\n        userName: string;\n      }>\n    ) => {\n      const { movieId, rating, userId, userName } = action.payload;\n      const movie = state.movies.find((m) => m._id === movieId);\n      if (movie) {\n        movie.ratings.push({ userId, userName, rating });\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovies.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchMovies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.movies = action.payload?.movies;\n      })\n      .addCase(fetchMovies.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch movies\";\n      })\n      .addCase(addComment.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(addComment.fulfilled, (state, action) => {\n        state.loading = false;\n        // Optionally handle the added comment in the state if needed\n      })\n      .addCase(addComment.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to add comment\";\n      })\n      .addCase(fetchComments.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchComments.fulfilled, (state, action) => {\n        state.loading = false;\n        const movie = state.movies.find(\n          (m) => m._id === action.payload.movieId\n        );\n        if (movie) {\n          movie.comments = action.payload.comments;\n        }\n      })\n      .addCase(fetchComments.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch comments\";\n      });\n  },\n});\n\nexport const { addRating } = moviesSlice.actions;\nexport default moviesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}