{"ast":null,"code":"import React from\"react\";import{useForm}from\"react-hook-form\";import TextField from\"@mui/material/TextField\";import Button from\"@mui/material/Button\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CommentInput=_ref=>{let{isLoggedIn,onSubmit}=_ref;const{register,handleSubmit,formState:{errors},reset}=useForm();const handleFormSubmit=data=>{if(isLoggedIn){console.log(\"data.comment\",data.comment);onSubmit(data.comment);reset();}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(handleFormSubmit),children:[/*#__PURE__*/_jsx(TextField,{label:\"Add Comment\",...register(\"comment\",{required:\"Comment is required\"}),error:!!errors.comment,helperText:errors.comment?errors.comment.message:\"\",fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Submit\"})]});};export default CommentInput;","map":{"version":3,"names":["React","useForm","TextField","Button","jsx","_jsx","jsxs","_jsxs","CommentInput","_ref","isLoggedIn","onSubmit","register","handleSubmit","formState","errors","reset","handleFormSubmit","data","console","log","comment","children","label","required","error","helperText","message","fullWidth","margin","type","variant","color"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/comments/CommentInput.tsx"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { CommentFormInputs } from \"../../utils/interface/types\";\n\ninterface CommentInputProps {\n  movieId: string;\n  isLoggedIn: boolean;\n  onSubmit: (comment: string) => void;\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({\n  isLoggedIn,\n  onSubmit,\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<CommentFormInputs>();\n\n  const handleFormSubmit = (data: CommentFormInputs) => {\n    if (isLoggedIn) {\n      console.log(\"data.comment\",data.comment);\n      onSubmit(data.comment);\n      reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\n      <TextField\n        label=\"Add Comment\"\n        {...register(\"comment\", { required: \"Comment is required\" })}\n        error={!!errors.comment}\n        helperText={errors.comment ? errors.comment.message : \"\"}\n        fullWidth\n        margin=\"normal\"\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default CommentInput;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,iBAAiB,CACzC,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS1C,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAG5C,IAH6C,CACjDC,UAAU,CACVC,QACF,CAAC,CAAAF,IAAA,CACC,KAAM,CACJG,QAAQ,CACRC,YAAY,CACZC,SAAS,CAAE,CAAEC,MAAO,CAAC,CACrBC,KACF,CAAC,CAAGf,OAAO,CAAoB,CAAC,CAEhC,KAAM,CAAAgB,gBAAgB,CAAIC,IAAuB,EAAK,CACpD,GAAIR,UAAU,CAAE,CACdS,OAAO,CAACC,GAAG,CAAC,cAAc,CAACF,IAAI,CAACG,OAAO,CAAC,CACxCV,QAAQ,CAACO,IAAI,CAACG,OAAO,CAAC,CACtBL,KAAK,CAAC,CAAC,CACT,CACF,CAAC,CAED,mBACET,KAAA,SAAMI,QAAQ,CAAEE,YAAY,CAACI,gBAAgB,CAAE,CAAAK,QAAA,eAC7CjB,IAAA,CAACH,SAAS,EACRqB,KAAK,CAAC,aAAa,IACfX,QAAQ,CAAC,SAAS,CAAE,CAAEY,QAAQ,CAAE,qBAAsB,CAAC,CAAC,CAC5DC,KAAK,CAAE,CAAC,CAACV,MAAM,CAACM,OAAQ,CACxBK,UAAU,CAAEX,MAAM,CAACM,OAAO,CAAGN,MAAM,CAACM,OAAO,CAACM,OAAO,CAAG,EAAG,CACzDC,SAAS,MACTC,MAAM,CAAC,QAAQ,CAChB,CAAC,cACFxB,IAAA,CAACF,MAAM,EAAC2B,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,SAAS,CAAAV,QAAA,CAAC,QAE1D,CAAQ,CAAC,EACL,CAAC,CAEX,CAAC,CAED,cAAe,CAAAd,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}