{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingDisplayComponent.tsx\",\n  _s = $RefreshSig$();\n// RatingDisplayComponent.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RatingComponent from \"./RatingComponent\";\nimport { fetchComments } from \"../../redux/slices/moviesSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingDisplayComponent = ({\n  movieId,\n  onRatingClick,\n  onRatingsFetched\n}) => {\n  _s();\n  const [rating, setRating] = useState(null);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const movie = useSelector(state => state.movies.movies.find(m => m._id === movieId));\n  useEffect(() => {\n    const fetchRatings = async () => {\n      if (movieId) {\n        var _response$comments$fi;\n        const response = await dispatch(fetchComments(movieId)).unwrap();\n        setRating(((_response$comments$fi = response.comments.find(r => r.userId === state.user.userId)) === null || _response$comments$fi === void 0 ? void 0 : _response$comments$fi.rating) || null);\n        onRatingsFetched(response.comments);\n      }\n    };\n    fetchRatings();\n  }, [movieId, dispatch, onRatingsFetched]);\n  return /*#__PURE__*/_jsxDEV(RatingComponent, {\n    isLoggedIn: isLoggedIn,\n    initialRating: rating,\n    movieId: movieId,\n    userId: state.user.userId,\n    userName: state.user.userName,\n    onRatingClick: onRatingClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingDisplayComponent, \"aMv888ujfDf5bmykX0sewkNQIgU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = RatingDisplayComponent;\nexport default RatingDisplayComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingDisplayComponent\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","RatingComponent","fetchComments","useDispatch","jsxDEV","_jsxDEV","RatingDisplayComponent","movieId","onRatingClick","onRatingsFetched","_s","rating","setRating","dispatch","isLoggedIn","state","user","movie","movies","find","m","_id","fetchRatings","_response$comments$fi","response","unwrap","comments","r","userId","initialRating","userName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingDisplayComponent.tsx"],"sourcesContent":["// RatingDisplayComponent.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RatingComponent from \"./RatingComponent\";\nimport { RootState } from \"../../redux/store\";\nimport { fetchComments } from \"../../redux/slices/moviesSlice\";\nimport { useDispatch } from \"react-redux\";\n\ninterface RatingDisplayComponentProps {\n  movieId: string;\n  onRatingClick: (value: number) => void;\n  onRatingsFetched: (\n    ratings: { userId: string; userName: string; rating: number }[]\n  ) => void;\n}\n\nconst RatingDisplayComponent: React.FC<RatingDisplayComponentProps> = ({\n  movieId,\n  onRatingClick,\n  onRatingsFetched,\n}) => {\n  const [rating, setRating] = useState<number | null>(null);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const movie = useSelector((state: RootState) =>\n    state.movies.movies.find((m) => m._id === movieId)\n  );\n\n  useEffect(() => {\n    const fetchRatings = async () => {\n      if (movieId) {\n        const response = await dispatch(fetchComments(movieId)).unwrap();\n        setRating(\n          response.comments.find((r) => r.userId === state.user.userId)\n            ?.rating || null\n        );\n        onRatingsFetched(response.comments);\n      }\n    };\n\n    fetchRatings();\n  }, [movieId, dispatch, onRatingsFetched]);\n\n  return (\n    <RatingComponent\n      isLoggedIn={isLoggedIn}\n      initialRating={rating}\n      movieId={movieId}\n      userId={state.user.userId}\n      userName={state.user.userName}\n      onRatingClick={onRatingClick}\n    />\n  );\n};\n\nexport default RatingDisplayComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1C,MAAMC,sBAA6D,GAAGA,CAAC;EACrEC,OAAO;EACPC,aAAa;EACbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAMe,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,UAAU,GAAGd,WAAW,CAAEe,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,KAAK,GAAGjB,WAAW,CAAEe,KAAgB,IACzCA,KAAK,CAACG,MAAM,CAACA,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKd,OAAO,CACnD,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMuB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIf,OAAO,EAAE;QAAA,IAAAgB,qBAAA;QACX,MAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACX,aAAa,CAACK,OAAO,CAAC,CAAC,CAACkB,MAAM,CAAC,CAAC;QAChEb,SAAS,CACP,EAAAW,qBAAA,GAAAC,QAAQ,CAACE,QAAQ,CAACP,IAAI,CAAEQ,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKb,KAAK,CAACC,IAAI,CAACY,MAAM,CAAC,cAAAL,qBAAA,uBAA7DA,qBAAA,CACIZ,MAAM,KAAI,IAChB,CAAC;QACDF,gBAAgB,CAACe,QAAQ,CAACE,QAAQ,CAAC;MACrC;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACf,OAAO,EAAEM,QAAQ,EAAEJ,gBAAgB,CAAC,CAAC;EAEzC,oBACEJ,OAAA,CAACJ,eAAe;IACda,UAAU,EAAEA,UAAW;IACvBe,aAAa,EAAElB,MAAO;IACtBJ,OAAO,EAAEA,OAAQ;IACjBqB,MAAM,EAAEb,KAAK,CAACC,IAAI,CAACY,MAAO;IAC1BE,QAAQ,EAAEf,KAAK,CAACC,IAAI,CAACc,QAAS;IAC9BtB,aAAa,EAAEA;EAAc;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEN,CAAC;AAACxB,EAAA,CArCIJ,sBAA6D;EAAA,QAMhDH,WAAW,EACTH,WAAW,EAChBA,WAAW;AAAA;AAAAmC,EAAA,GARrB7B,sBAA6D;AAuCnE,eAAeA,sBAAsB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}