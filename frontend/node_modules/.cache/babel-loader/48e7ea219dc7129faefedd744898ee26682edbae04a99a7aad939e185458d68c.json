{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/FavouriteButton/FavoriteButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFavorite, removeFavorite } from \"../../redux/slices/favoritesSlice\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteButton = ({\n  movie\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const favorites = useSelector(state => state.favorites.favorites);\n  const isFavorite = useMemo(() => {\n    favorites.some(fav => fav.imdbID === movie.imdbID);\n  }, [favorites, movie.imdbID]);\n  const handleFavoriteClick = () => {\n    if (isLoggedIn) {\n      if (isFavorite) {\n        dispatch(removeFavorite(movie.imdbID));\n      } else {\n        dispatch(addFavorite(movie.imdbID));\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleFavoriteClick,\n    color: \"default\",\n    children: isFavorite ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      sx: {\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 62\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteButton, \"dKw3mZpZIRUr5XXecFFChwp6RRc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = FavoriteButton;\nexport default FavoriteButton;\nvar _c;\n$RefreshReg$(_c, \"FavoriteButton\");","map":{"version":3,"names":["React","useMemo","IconButton","FavoriteBorder","FavoriteIcon","useDispatch","useSelector","addFavorite","removeFavorite","toast","jsxDEV","_jsxDEV","FavoriteButton","movie","_s","dispatch","isLoggedIn","state","user","favorites","isFavorite","some","fav","imdbID","handleFavoriteClick","error","onClick","color","children","sx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/FavouriteButton/FavoriteButton.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { addFavorite, removeFavorite } from \"../../redux/slices/favoritesSlice\";\nimport { toast } from \"react-toastify\";\nimport { Movie } from \"../../utils/interface/types\";\n\ninterface FavoriteButtonProps {\n  movie: Movie;\n}\n\nconst FavoriteButton: React.FC<FavoriteButtonProps> = ({ movie }) => {\n  const dispatch: AppDispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const favorites = useSelector(\n    (state: RootState) => state.favorites.favorites\n  );\n\n  const isFavorite:any = useMemo(()=>{\n      favorites.some((fav) => fav.imdbID === movie.imdbID);\n  },[favorites, movie.imdbID])\n\n  const handleFavoriteClick = () => {\n    if (isLoggedIn) {\n      if (isFavorite) {\n        dispatch(removeFavorite(movie.imdbID));\n      } else {\n        dispatch(addFavorite(movie.imdbID));\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n\n  return (\n    <IconButton onClick={handleFavoriteClick} color=\"default\">\n      {isFavorite ? <FavoriteIcon sx={{ color: \"red\" }} /> : <FavoriteBorder />}\n    </IconButton>\n  );\n};\n\nexport default FavoriteButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,WAAW,EAAEC,cAAc,QAAQ,mCAAmC;AAC/E,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAMC,QAAqB,GAAGV,WAAW,CAAC,CAAC;EAC3C,MAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,SAAS,GAAGb,WAAW,CAC1BW,KAAgB,IAAKA,KAAK,CAACE,SAAS,CAACA,SACxC,CAAC;EAED,MAAMC,UAAc,GAAGnB,OAAO,CAAC,MAAI;IAC/BkB,SAAS,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAKV,KAAK,CAACU,MAAM,CAAC;EACxD,CAAC,EAAC,CAACJ,SAAS,EAAEN,KAAK,CAACU,MAAM,CAAC,CAAC;EAE5B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIR,UAAU,EAAE;MACd,IAAII,UAAU,EAAE;QACdL,QAAQ,CAACP,cAAc,CAACK,KAAK,CAACU,MAAM,CAAC,CAAC;MACxC,CAAC,MAAM;QACLR,QAAQ,CAACR,WAAW,CAACM,KAAK,CAACU,MAAM,CAAC,CAAC;MACrC;IACF,CAAC,MAAM;MACLd,KAAK,CAACgB,KAAK,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC;EAED,oBACEd,OAAA,CAACT,UAAU;IAACwB,OAAO,EAAEF,mBAAoB;IAACG,KAAK,EAAC,SAAS;IAAAC,QAAA,EACtDR,UAAU,gBAAGT,OAAA,CAACP,YAAY;MAACyB,EAAE,EAAE;QAAEF,KAAK,EAAE;MAAM;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGtB,OAAA,CAACR,cAAc;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEjB,CAAC;AAACnB,EAAA,CA5BIF,cAA6C;EAAA,QACnBP,WAAW,EACtBC,WAAW,EACZA,WAAW;AAAA;AAAA4B,EAAA,GAHzBtB,cAA6C;AA8BnD,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}