{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesListPage = () => {\n  _s();\n  const {\n    movies,\n    loading,\n    error\n  } = useFetchMovies();\n  const searchTerm = useSelector(state => state.search.term.toLowerCase());\n  const filteredMovies = movies.filter(movie => movie.Title.toLowerCase().includes(searchTerm));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"92%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"92%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  const simplifiedMovies = filteredMovies.map(movie => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID\n  }));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      width: \"92%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: simplifiedMovies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesListPage, \"r40Qn4k6vIgodmKqeVqL0gpBWzo=\", false, function () {\n  return [useFetchMovies, useSelector];\n});\n_c = MoviesListPage;\nexport default MoviesListPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesListPage\");","map":{"version":3,"names":["React","Typography","Container","Grid","MovieCard","useFetchMovies","useSelector","jsxDEV","_jsxDEV","MoviesListPage","_s","movies","loading","error","searchTerm","state","search","term","toLowerCase","filteredMovies","filter","movie","Title","includes","sx","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","simplifiedMovies","map","Poster","Year","imdbRating","Genre","imdbID","container","spacing","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nimport { SimplifiedMovie } from \"../utils/interface/types\";\n\nconst MoviesListPage: React.FC = () => {\n  const { movies, loading, error } = useFetchMovies();\n  const searchTerm = useSelector((state: RootState) =>\n    state.search.term.toLowerCase()\n  );\n  const filteredMovies = movies.filter((movie) =>\n    movie.Title.toLowerCase().includes(searchTerm)\n  );\n\n  if (loading) {\n    return (\n      <Container sx={{ width: \"92%\" }}>\n        <Typography variant=\"h5\">Loading...</Typography>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container sx={{ width: \"92%\" }}>\n        <Typography variant=\"h5\" color=\"error\">\n          Error: {error}\n        </Typography>\n      </Container>\n    );\n  }\n  const simplifiedMovies: SimplifiedMovie[] = filteredMovies.map((movie) => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID,\n  }));\n\n  return (\n    <Container sx={{ width: \"92%\" }}>\n      <Grid container spacing={3}>\n        {simplifiedMovies.map((movie) => (\n          <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n            <MovieCard movie={movie} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MoviesListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1C,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,cAAc,CAAC,CAAC;EACnD,MAAMS,UAAU,GAAGR,WAAW,CAAES,KAAgB,IAC9CA,KAAK,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAChC,CAAC;EACD,MAAMC,cAAc,GAAGR,MAAM,CAACS,MAAM,CAAEC,KAAK,IACzCA,KAAK,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACT,UAAU,CAC/C,CAAC;EAED,IAAIF,OAAO,EAAE;IACX,oBACEJ,OAAA,CAACN,SAAS;MAACsB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAC,QAAA,eAC9BlB,OAAA,CAACP,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAEhB;EAEA,IAAIlB,KAAK,EAAE;IACT,oBACEL,OAAA,CAACN,SAAS;MAACsB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAC,QAAA,eAC9BlB,OAAA,CAACP,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAACK,KAAK,EAAC,OAAO;QAAAN,QAAA,GAAC,SAC9B,EAACb,KAAK;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEhB;EACA,MAAME,gBAAmC,GAAGd,cAAc,CAACe,GAAG,CAAEb,KAAK,KAAM;IACzEC,KAAK,EAAED,KAAK,CAACC,KAAK;IAClBa,MAAM,EAAEd,KAAK,CAACc,MAAM;IACpBC,IAAI,EAAEf,KAAK,CAACe,IAAI;IAChBC,UAAU,EAAEhB,KAAK,CAACgB,UAAU;IAC5BC,KAAK,EAAEjB,KAAK,CAACiB,KAAK;IAClBC,MAAM,EAAElB,KAAK,CAACkB;EAChB,CAAC,CAAC,CAAC;EAEH,oBACE/B,OAAA,CAACN,SAAS;IAACsB,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,eAC9BlB,OAAA,CAACL,IAAI;MAACqC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAf,QAAA,EACxBO,gBAAgB,CAACC,GAAG,CAAEb,KAAK,iBAC1Bb,OAAA,CAACL,IAAI;QAACuC,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAnB,QAAA,eAC9BlB,OAAA,CAACJ,SAAS;UAACiB,KAAK,EAAEA;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADSV,KAAK,CAACkB,MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5C,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACrB,EAAA,CA9CID,cAAwB;EAAA,QACOJ,cAAc,EAC9BC,WAAW;AAAA;AAAAwC,EAAA,GAF1BrC,cAAwB;AAgD9B,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}