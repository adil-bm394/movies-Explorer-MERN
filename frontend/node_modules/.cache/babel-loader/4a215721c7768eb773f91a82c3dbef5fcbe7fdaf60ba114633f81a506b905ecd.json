{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  favorites: [],\n  loading: false,\n  error: null\n};\nexport const fetchFavorites = createAsyncThunk(\"favorites/fetchFavorites\", async (_, {\n  rejectWithValue,\n  getState\n}) => {\n  var _state$user$userDetai;\n  const state = getState();\n  const token = (_state$user$userDetai = state.user.userDetails) === null || _state$user$userDetai === void 0 ? void 0 : _state$user$userDetai.token;\n  try {\n    const response = await axios.get(\"http://localhost:8000/api/v1/getfavorites\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"response for getllFAv from backend \", response.data.favorites);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\n\n// export const addFavorite = createAsyncThunk(\n//   \"favorites/addFavorite\",\n//   async (movie: SimplifiedMovie, { rejectWithValue, getState }) => {\n//     const state = getState() as any;\n//     const token = state.user.userDetails?.token;\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/addFavorite\",\n//         { imdbID: movie.imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       console.log(\"response backend for addFavourite\", response.data.favorites);\n//       return response.data.favorites;\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n// export const removeFavorite = createAsyncThunk(\n//   \"favorites/removeFavorite\",\n//   async (imdbID: string, { rejectWithValue, getState }) => {\n//     const state: any = getState();\n//     const token = state.user.userDetails?.token;\n\n//     try {\n\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/removeFavorite\",\n//         { imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n\n//       return { imdbID };\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchFavorites.pending, state => {\n      state.loading = true;\n    }).addCase(fetchFavorites.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites = action.payload;\n    }).addCase(fetchFavorites.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(addFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(addFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites = action.payload;\n    }).addCase(addFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(removeFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(removeFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      const removedImdbID = action.payload.imdbID;\n      state.favorites = state.favorites.filter(movie => movie.imdbID !== removedImdbID);\n    }).addCase(removeFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","favorites","loading","error","fetchFavorites","_","rejectWithValue","getState","_state$user$userDetai","state","token","user","userDetails","response","get","headers","Authorization","console","log","data","message","favoritesSlice","name","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","addFavorite","removeFavorite","removedImdbID","imdbID","filter","movie","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/favoritesSlice.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie, SimplifiedMovie } from \"../../utils/interface/types\";\n\ninterface FavoritesState {\n  favorites: Movie[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: FavoritesState = {\n  favorites: [],\n  loading: false,\n  error: null,\n};\n\nexport const fetchFavorites = createAsyncThunk(\n  \"favorites/fetchFavorites\",\n  async (_, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const token = state.user.userDetails?.token;\n\n    try {\n      const response = await axios.get(\n        \"http://localhost:8000/api/v1/getfavorites\",\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\n        \"response for getllFAv from backend \",\n        response.data.favorites\n      );\n\n      return response.data;\n    } catch (error: any) {\n      return rejectWithValue(\n        error.response ? error.response.data : error.message\n      );\n    }\n  }\n);\n\n// export const addFavorite = createAsyncThunk(\n//   \"favorites/addFavorite\",\n//   async (movie: SimplifiedMovie, { rejectWithValue, getState }) => {\n//     const state = getState() as any;\n//     const token = state.user.userDetails?.token;\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/addFavorite\",\n//         { imdbID: movie.imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       console.log(\"response backend for addFavourite\", response.data.favorites);\n//       return response.data.favorites;\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n// export const removeFavorite = createAsyncThunk(\n//   \"favorites/removeFavorite\",\n//   async (imdbID: string, { rejectWithValue, getState }) => {\n//     const state: any = getState();\n//     const token = state.user.userDetails?.token;\n\n//     try {\n      \n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/removeFavorite\",\n//         { imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n\n//       return { imdbID };\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchFavorites.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchFavorites.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites = action.payload;\n      })\n      .addCase(fetchFavorites.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(addFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(addFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites = action.payload;\n      })\n      .addCase(addFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(removeFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(removeFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        const removedImdbID = action.payload.imdbID;\n        state.favorites = state.favorites.filter(\n          (movie) => movie.imdbID !== removedImdbID\n        );\n      })\n      .addCase(removeFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport default favoritesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}