{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RatingComponent = ({\n  movieId,\n  handleRatingClick,\n  initialRating,\n  userId,\n  userName\n}) => {\n  _s();\n  const [rating, setRating] = useState(initialRating);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  useEffect(() => {\n    if (initialRating !== null) {\n      setRating(initialRating);\n    }\n  }, [initialRating]);\n  const handleClick = value => {\n    if (isLoggedIn) {\n      setRating(value);\n      handleRatingClick(value);\n    } else {\n      console.warn(\"User is not logged in\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => handleClick(value),\n      children: rating && rating >= value ? /*#__PURE__*/_jsxDEV(StarIcon, {\n        sx: {\n          color: \"yellow\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(RatingComponent, \"pg/Xpck7k9rDD33fgAbbFnkQrs4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RatingComponent;\nexport default RatingComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingComponent\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","IconButton","StarBorderIcon","StarIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","RatingComponent","movieId","handleRatingClick","initialRating","userId","userName","_s","rating","setRating","dispatch","isLoggedIn","state","user","handleClick","value","console","warn","children","map","onClick","sx","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport IconButton from \"@mui/material/IconButton\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport StarIcon from \"@mui/icons-material/Star\";\n\n\n\nconst RatingComponent: React.FC<RatingComponentProps> = ({\n  movieId,\n  handleRatingClick,\n  initialRating,\n  userId,\n  userName,\n}) => {\n  const [rating, setRating] = useState<number | null>(initialRating);\n  const dispatch: AppDispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n\n  useEffect(() => {\n    if (initialRating !== null) {\n      setRating(initialRating);\n    }\n  }, [initialRating]);\n\n  const handleClick = (value: number) => {\n    if (isLoggedIn) {\n      setRating(value);\n      handleRatingClick(value); \n    } else {\n      console.warn(\"User is not logged in\");\n    }\n  };\n\n  return (\n    <>\n      {[1, 2, 3, 4, 5].map((value) => (\n        <IconButton key={value} onClick={() => handleClick(value)}>\n          {rating && rating >= value ? (\n            <StarIcon sx={{ color: \"yellow\" }} />\n          ) : (\n            <StarBorderIcon />\n          )}\n        </IconButton>\n      ))}\n    </>\n  );\n};\n\nexport default RatingComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIhD,MAAMC,eAA+C,GAAGA,CAAC;EACvDC,OAAO;EACPC,iBAAiB;EACjBC,aAAa;EACbC,MAAM;EACNC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAgBc,aAAa,CAAC;EAClE,MAAMM,QAAqB,GAAGjB,WAAW,CAAC,CAAC;EAC3C,MAAMkB,UAAU,GAAGnB,WAAW,CAAEoB,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAE3EpB,SAAS,CAAC,MAAM;IACd,IAAIa,aAAa,KAAK,IAAI,EAAE;MAC1BK,SAAS,CAACL,aAAa,CAAC;IAC1B;EACF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMU,WAAW,GAAIC,KAAa,IAAK;IACrC,IAAIJ,UAAU,EAAE;MACdF,SAAS,CAACM,KAAK,CAAC;MAChBZ,iBAAiB,CAACY,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLC,OAAO,CAACC,IAAI,CAAC,uBAAuB,CAAC;IACvC;EACF,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEJ,KAAK,iBACzBjB,OAAA,CAACJ,UAAU;MAAa0B,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACC,KAAK,CAAE;MAAAG,QAAA,EACvDV,MAAM,IAAIA,MAAM,IAAIO,KAAK,gBACxBjB,OAAA,CAACF,QAAQ;QAACyB,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAS;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAErC5B,OAAA,CAACH,cAAc;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAClB,GALcX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACb;EAAC,gBACF,CAAC;AAEP,CAAC;AAACnB,EAAA,CAvCIN,eAA+C;EAAA,QAQrBR,WAAW,EACtBD,WAAW;AAAA;AAAAmC,EAAA,GAT1B1B,eAA+C;AAyCrD,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}