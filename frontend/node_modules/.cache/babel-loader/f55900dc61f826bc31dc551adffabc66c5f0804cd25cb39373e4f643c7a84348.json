{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingDisplayComponent = ({\n  movieId,\n  onRatingClick,\n  onRatingsFetched\n}) => {\n  _s();\n  const [rating, setRating] = useState(null);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const userId = useSelector(state => state.user.userId);\n  const userName = useSelector(state => state.user.userName);\n  useEffect(() => {\n    const fetchRatings = async () => {\n      if (movieId) {\n        var _response$comments$fi;\n        const response = await dispatch(fetchComments(movieId)).unwrap();\n        setRating(((_response$comments$fi = response.comments.find(r => r.userId === userId)) === null || _response$comments$fi === void 0 ? void 0 : _response$comments$fi.rating) || null);\n        onRatingsFetched(response.comments);\n      }\n    };\n    fetchRatings();\n  }, [movieId, dispatch, onRatingsFetched, userId]);\n  return /*#__PURE__*/_jsxDEV(RatingComponent, {\n    isLoggedIn: isLoggedIn,\n    initialRating: rating,\n    movieId: movieId,\n    userId: userId,\n    userName: userName,\n    onRatingClick: onRatingClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingDisplayComponent, \"0992bm755xzBvNW7RBcuoSPcRPA=\", true, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = RatingDisplayComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingDisplayComponent\");","map":{"version":3,"names":["useSelector","jsxDEV","_jsxDEV","RatingDisplayComponent","movieId","onRatingClick","onRatingsFetched","_s","rating","setRating","useState","dispatch","useDispatch","isLoggedIn","state","user","userId","userName","useEffect","fetchRatings","_response$comments$fi","response","fetchComments","unwrap","comments","find","r","RatingComponent","initialRating","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\n\n\ninterface RatingComponentProps {\n  isLoggedIn: boolean;\n  initialRating: number | null;\n  movieId: string;\n  userId: string;\n  userName: string;\n  onRatingClick: (value: number) => void; \n}\nconst RatingDisplayComponent: React.FC<RatingDisplayComponentProps> = ({\n  movieId,\n  onRatingClick,\n  onRatingsFetched,\n}) => {\n  const [rating, setRating] = useState<number | null>(null);\n  const dispatch = useDispatch<ThunkDispatch<RootState, unknown, AnyAction>>();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const userId = useSelector((state: RootState) => state.user.userId);\n  const userName = useSelector((state: RootState) => state.user.userName);\n\n  useEffect(() => {\n    const fetchRatings = async () => {\n      if (movieId) {\n        const response = await dispatch(fetchComments(movieId)).unwrap();\n        setRating(\n          response.comments.find(\n            (r: { userId: string; rating: number }) => r.userId === userId\n          )?.rating || null\n        );\n        onRatingsFetched(response.comments);\n      }\n    };\n\n    fetchRatings();\n  }, [movieId, dispatch, onRatingsFetched, userId]);\n\n  return (\n    <RatingComponent\n      isLoggedIn={isLoggedIn}\n      initialRating={rating}\n      movieId={movieId}\n      userId={userId}\n      userName={userName}\n      onRatingClick={onRatingClick}\n    />\n  );\n};\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1C,MAAMC,sBAA6D,GAAGA,CAAC;EACrEC,OAAO;EACPC,aAAa;EACbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAMC,QAAQ,GAAGC,WAAW,CAA+C,CAAC;EAC5E,MAAMC,UAAU,GAAGb,WAAW,CAAEc,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,MAAM,GAAGhB,WAAW,CAAEc,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC;EACnE,MAAMC,QAAQ,GAAGjB,WAAW,CAAEc,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACE,QAAQ,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACd,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIf,OAAO,EAAE;QAAA,IAAAgB,qBAAA;QACX,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,aAAa,CAAClB,OAAO,CAAC,CAAC,CAACmB,MAAM,CAAC,CAAC;QAChEd,SAAS,CACP,EAAAW,qBAAA,GAAAC,QAAQ,CAACG,QAAQ,CAACC,IAAI,CACnBC,CAAqC,IAAKA,CAAC,CAACV,MAAM,KAAKA,MAC1D,CAAC,cAAAI,qBAAA,uBAFDA,qBAAA,CAEGZ,MAAM,KAAI,IACf,CAAC;QACDF,gBAAgB,CAACe,QAAQ,CAACG,QAAQ,CAAC;MACrC;IACF,CAAC;IAEDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACf,OAAO,EAAEO,QAAQ,EAAEL,gBAAgB,EAAEU,MAAM,CAAC,CAAC;EAEjD,oBACEd,OAAA,CAACyB,eAAe;IACdd,UAAU,EAAEA,UAAW;IACvBe,aAAa,EAAEpB,MAAO;IACtBJ,OAAO,EAAEA,OAAQ;IACjBY,MAAM,EAAEA,MAAO;IACfC,QAAQ,EAAEA,QAAS;IACnBZ,aAAa,EAAEA;EAAc;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEN,CAAC;AAACzB,EAAA,CArCIJ,sBAA6D;EAAA,QAO9CH,WAAW,EACfA,WAAW,EACTA,WAAW;AAAA;AAAAiC,EAAA,GATxB9B,sBAA6D;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}