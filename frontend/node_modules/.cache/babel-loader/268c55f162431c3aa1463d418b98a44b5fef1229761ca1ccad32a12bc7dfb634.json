{"ast":null,"code":"import * as yup from \"yup\";\nconst registerSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  phone: yup.string().matches(/^[0-9]+$/, \"Phone number must be digits only\").required(\"Phone number is required\"),\n  password: yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\")\n});\nexport default registerSchema;","map":{"version":3,"names":["yup","registerSchema","object","shape","name","string","required","email","phone","matches","password","min"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/ValidatioSchema/ValidationSchema.tsx"],"sourcesContent":["\nimport * as yup from \"yup\";\n\nconst registerSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  phone: yup\n    .string()\n    .matches(/^[0-9]+$/, \"Phone number must be digits only\")\n    .required(\"Phone number is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters\")\n    .required(\"Password is required\"),\n});\n\nexport default registerSchema;\n"],"mappings":"AACA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,cAAc,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACxCC,IAAI,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,kBAAkB,CAAC;EAC/CC,KAAK,EAAEP,GAAG,CAACK,MAAM,CAAC,CAAC,CAACE,KAAK,CAAC,eAAe,CAAC,CAACD,QAAQ,CAAC,mBAAmB,CAAC;EACxEE,KAAK,EAAER,GAAG,CACPK,MAAM,CAAC,CAAC,CACRI,OAAO,CAAC,UAAU,EAAE,kCAAkC,CAAC,CACvDH,QAAQ,CAAC,0BAA0B,CAAC;EACvCI,QAAQ,EAAEV,GAAG,CACVK,MAAM,CAAC,CAAC,CACRM,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDL,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAEF,eAAeL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}