{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesListPage = () => {\n  _s();\n  const {\n    movies,\n    loading,\n    error\n  } = useFetchMovies();\n  console.log(\"moviesListPage =>\", movies); // Log movies to check the content\n\n  // Ensure movies is always an array\n  const filteredMovies = Array.isArray(movies) ? movies.filter(movie => movie.Title.toLowerCase().includes(searchTerm)) : [];\n  console.log(\"filteredMovies =>\", filteredMovies); // Log filteredMovies to check the content\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      width: \"92%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie,\n          isFavorite: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesListPage, \"Vmsjkd8I1FCUgdMjphjcPNpCzgI=\", false, function () {\n  return [useFetchMovies];\n});\n_c = MoviesListPage;\nexport default MoviesListPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesListPage\");","map":{"version":3,"names":["React","Typography","Container","Grid","MovieCard","useFetchMovies","jsxDEV","_jsxDEV","MoviesListPage","_s","movies","loading","error","console","log","filteredMovies","Array","isArray","filter","movie","Title","toLowerCase","includes","searchTerm","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","container","spacing","map","item","xs","sm","md","isFavorite","imdbID","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\n\nconst MoviesListPage: React.FC = () => {\n  const { movies, loading, error } = useFetchMovies();\n \n\n  console.log(\"moviesListPage =>\", movies); // Log movies to check the content\n  \n\n  // Ensure movies is always an array\n  const filteredMovies = Array.isArray(movies)\n    ? movies.filter((movie) => movie.Title.toLowerCase().includes(searchTerm))\n    : [];\n\n  console.log(\"filteredMovies =>\", filteredMovies); // Log filteredMovies to check the content\n\n  if (loading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  if (error) {\n    return <Typography>Error: {error}</Typography>;\n  }\n\n  return (\n    <Container sx={{ width: \"92%\" }}>\n      <Grid container spacing={3}>\n        {filteredMovies.map((movie) => (\n          <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n            <MovieCard movie={movie} isFavorite />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MoviesListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,cAAc,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrD,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGP,cAAc,CAAC,CAAC;EAGnDQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,MAAM,CAAC,CAAC,CAAC;;EAG1C;EACA,MAAMK,cAAc,GAAGC,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,GACxCA,MAAM,CAACQ,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACC,UAAU,CAAC,CAAC,GACxE,EAAE;EAENV,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,cAAc,CAAC,CAAC,CAAC;;EAElD,IAAIJ,OAAO,EAAE;IACX,oBAAOJ,OAAA,CAACN,UAAU;MAAAuB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAC5C;EAEA,IAAIhB,KAAK,EAAE;IACT,oBAAOL,OAAA,CAACN,UAAU;MAAAuB,QAAA,GAAC,SAAO,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAChD;EAEA,oBACErB,OAAA,CAACL,SAAS;IAAC2B,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,eAC9BjB,OAAA,CAACJ,IAAI;MAAC4B,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACxBT,cAAc,CAACkB,GAAG,CAAEd,KAAK,iBACxBZ,OAAA,CAACJ,IAAI;QAAC+B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eAC9BjB,OAAA,CAACH,SAAS;UAACe,KAAK,EAAEA,KAAM;UAACmB,UAAU;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADFT,KAAK,CAACoB,MAAM;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5C,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACnB,EAAA,CAjCID,cAAwB;EAAA,QACOH,cAAc;AAAA;AAAAmC,EAAA,GAD7ChC,cAAwB;AAmC9B,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}