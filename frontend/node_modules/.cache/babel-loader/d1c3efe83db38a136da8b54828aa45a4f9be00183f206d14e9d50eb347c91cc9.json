{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFavorite, removeFavorite } from \"../redux/slices/favoritesSlice\";\nimport { toast } from \"react-toastify\";\n\n//import { Movie } from \"../../utils/interface/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteButton = ({\n  movie\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const favorites = useSelector(state => state.favorites.favorites);\n  const isFavorite = favorites.some(fav => fav.imdbID === movie.imdbID);\n  const handleFavoriteClick = async () => {\n    if (isLoggedIn) {\n      if (isFavorite) {\n        try {\n          await dispatch(removeFavorite(movie.imdbID)).unwrap();\n          toast.success(\"Removed from favorites!\");\n        } catch (error) {\n          toast.error(\"Failed to remove from favorites\");\n          console.error(\"Error removing favorite:\", error);\n        }\n      } else {\n        try {\n          await dispatch(addFavorite(movie)).unwrap();\n          toast.success(\"Added to favorites!\");\n        } catch (error) {\n          toast.error(\"Failed to add to favorites\");\n          console.error(\"Error adding favorite:\", error);\n        }\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleFavoriteClick,\n    color: \"default\",\n    children: isFavorite ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      sx: {\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 62\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteButton, \"vBESzgI1FMUCVaSuyzzgJpAreh4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = FavoriteButton;\nexport default FavoriteButton;\nvar _c;\n$RefreshReg$(_c, \"FavoriteButton\");","map":{"version":3,"names":["React","IconButton","FavoriteBorder","FavoriteIcon","useDispatch","useSelector","addFavorite","removeFavorite","toast","jsxDEV","_jsxDEV","FavoriteButton","movie","_s","dispatch","isLoggedIn","state","user","favorites","isFavorite","some","fav","imdbID","handleFavoriteClick","unwrap","success","error","console","onClick","color","children","sx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx"],"sourcesContent":["import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../redux/store\";\nimport { addFavorite, removeFavorite } from \"../redux/slices/favoritesSlice\";\nimport { toast } from \"react-toastify\";\nimport { Movie } from \"../utils/interface/types\";\n//import { Movie } from \"../../utils/interface/types\";\n\ninterface FavoriteButtonProps {\n  movie: Movie;\n}\n\nconst FavoriteButton: React.FC<FavoriteButtonProps> = ({ movie }) => {\n  const dispatch: AppDispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const favorites = useSelector(\n    (state: RootState) => state.favorites.favorites\n  );\n\n  const isFavorite = favorites.some((fav) => fav.imdbID === movie.imdbID);\n\n  const handleFavoriteClick = async () => {\n    if (isLoggedIn) {\n      if (isFavorite) {\n        try {\n          await dispatch(removeFavorite(movie.imdbID)).unwrap();\n          toast.success(\"Removed from favorites!\");\n        } catch (error: any) {\n          toast.error(\"Failed to remove from favorites\");\n          console.error(\"Error removing favorite:\", error);\n        }\n      } else {\n        try {\n          await dispatch(addFavorite(movie)).unwrap();\n          toast.success(\"Added to favorites!\");\n        } catch (error: any) {\n          toast.error(\"Failed to add to favorites\");\n          console.error(\"Error adding favorite:\", error);\n        }\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n\n  return (\n    <IconButton onClick={handleFavoriteClick} color=\"default\">\n      {isFavorite ? <FavoriteIcon sx={{ color: \"red\" }} /> : <FavoriteBorder />}\n    </IconButton>\n  );\n};\n\nexport default FavoriteButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,WAAW,EAAEC,cAAc,QAAQ,gCAAgC;AAC5E,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAMC,QAAqB,GAAGV,WAAW,CAAC,CAAC;EAC3C,MAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,SAAS,GAAGb,WAAW,CAC1BW,KAAgB,IAAKA,KAAK,CAACE,SAAS,CAACA,SACxC,CAAC;EAED,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAKV,KAAK,CAACU,MAAM,CAAC;EAEvE,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAIR,UAAU,EAAE;MACd,IAAII,UAAU,EAAE;QACd,IAAI;UACF,MAAML,QAAQ,CAACP,cAAc,CAACK,KAAK,CAACU,MAAM,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC;UACrDhB,KAAK,CAACiB,OAAO,CAAC,yBAAyB,CAAC;QAC1C,CAAC,CAAC,OAAOC,KAAU,EAAE;UACnBlB,KAAK,CAACkB,KAAK,CAAC,iCAAiC,CAAC;UAC9CC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF,CAAC,MAAM;QACL,IAAI;UACF,MAAMZ,QAAQ,CAACR,WAAW,CAACM,KAAK,CAAC,CAAC,CAACY,MAAM,CAAC,CAAC;UAC3ChB,KAAK,CAACiB,OAAO,CAAC,qBAAqB,CAAC;QACtC,CAAC,CAAC,OAAOC,KAAU,EAAE;UACnBlB,KAAK,CAACkB,KAAK,CAAC,4BAA4B,CAAC;UACzCC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF;IACF,CAAC,MAAM;MACLlB,KAAK,CAACkB,KAAK,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC;EAED,oBACEhB,OAAA,CAACT,UAAU;IAAC2B,OAAO,EAAEL,mBAAoB;IAACM,KAAK,EAAC,SAAS;IAAAC,QAAA,EACtDX,UAAU,gBAAGT,OAAA,CAACP,YAAY;MAAC4B,EAAE,EAAE;QAAEF,KAAK,EAAE;MAAM;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGzB,OAAA,CAACR,cAAc;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEjB,CAAC;AAACtB,EAAA,CAtCIF,cAA6C;EAAA,QACnBP,WAAW,EACtBC,WAAW,EACZA,WAAW;AAAA;AAAA+B,EAAA,GAHzBzB,cAA6C;AAwCnD,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}