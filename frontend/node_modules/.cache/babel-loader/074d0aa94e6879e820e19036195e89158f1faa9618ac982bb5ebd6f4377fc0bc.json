{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/comments/CommentInput.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentInput = ({\n  isLoggedIn,\n  onSubmit\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const handleFormSubmit = data => {\n    if (isLoggedIn) {\n      console.log(data);\n      onSubmit(data.comment);\n      reset();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Add Comment\",\n      ...register(\"comment\", {\n        required: \"Comment is required\"\n      }),\n      error: !!errors.comment,\n      helperText: errors.comment ? errors.comment.message : \"\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentInput, \"amX/sS0yfNsRGxy7oBuRO1EJzxc=\", false, function () {\n  return [useForm];\n});\n_c = CommentInput;\nexport default CommentInput;\nvar _c;\n$RefreshReg$(_c, \"CommentInput\");","map":{"version":3,"names":["React","useForm","TextField","Button","jsxDEV","_jsxDEV","CommentInput","isLoggedIn","onSubmit","_s","register","handleSubmit","formState","errors","reset","handleFormSubmit","data","console","log","comment","children","label","required","error","helperText","message","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","color","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/comments/CommentInput.tsx"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { CommentFormInputs } from \"../../utils/interface/types\";\n\ninterface CommentInputProps {\n  movieId: string;\n  isLoggedIn: boolean;\n  onSubmit: (comment: string) => void;\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({\n  isLoggedIn,\n  onSubmit,\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<CommentFormInputs>();\n\n  const handleFormSubmit = (data: CommentFormInputs) => {\n    if (isLoggedIn) {\n      console.log(data)\n      onSubmit(data.comment);\n      reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\n      <TextField\n        label=\"Add Comment\"\n        {...register(\"comment\", { required: \"Comment is required\" })}\n        error={!!errors.comment}\n        helperText={errors.comment ? errors.comment.message : \"\"}\n        fullWidth\n        margin=\"normal\"\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default CommentInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1C,MAAMC,YAAyC,GAAGA,CAAC;EACjDC,UAAU;EACVC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO,CAAC;IACrBC;EACF,CAAC,GAAGb,OAAO,CAAoB,CAAC;EAEhC,MAAMc,gBAAgB,GAAIC,IAAuB,IAAK;IACpD,IAAIT,UAAU,EAAE;MACdU,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBR,QAAQ,CAACQ,IAAI,CAACG,OAAO,CAAC;MACtBL,KAAK,CAAC,CAAC;IACT;EACF,CAAC;EAED,oBACET,OAAA;IAAMG,QAAQ,EAAEG,YAAY,CAACI,gBAAgB,CAAE;IAAAK,QAAA,gBAC7Cf,OAAA,CAACH,SAAS;MACRmB,KAAK,EAAC,aAAa;MAAA,GACfX,QAAQ,CAAC,SAAS,EAAE;QAAEY,QAAQ,EAAE;MAAsB,CAAC,CAAC;MAC5DC,KAAK,EAAE,CAAC,CAACV,MAAM,CAACM,OAAQ;MACxBK,UAAU,EAAEX,MAAM,CAACM,OAAO,GAAGN,MAAM,CAACM,OAAO,CAACM,OAAO,GAAG,EAAG;MACzDC,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF1B,OAAA,CAACF,MAAM;MAAC6B,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAAAd,QAAA,EAAC;IAE1D;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACtB,EAAA,CAlCIH,YAAyC;EAAA,QASzCL,OAAO;AAAA;AAAAkC,EAAA,GATP7B,YAAyC;AAoC/C,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}