{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/FavouriteButton/FavoriteButton.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteButton = ({\n  movieId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const favorites = useSelector(state => state.favorites.favorites);\n  const movie = useSelector(state => state.movies.movies.find(m => m.imdbID === movieId));\n  const isFavorite = favorites.some(favMovie => favMovie.imdbID === movieId);\n  const handleFavoriteClick = () => {\n    if (isLoggedIn) {\n      if (movie) {\n        dispatch(toggleFavorite(movie));\n      } else {\n        toast.error(\"Movie not found.\");\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleFavoriteClick,\n    color: isFavorite ? \"secondary\" : \"default\",\n    children: isFavorite ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      sx: {\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 62\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteButton, \"ZRrgex2VoZAcIFbA6/gRg46nvto=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = FavoriteButton;\nexport default FavoriteButton;\nvar _c;\n$RefreshReg$(_c, \"FavoriteButton\");","map":{"version":3,"names":["React","IconButton","FavoriteBorder","FavoriteIcon","useDispatch","useSelector","toast","jsxDEV","_jsxDEV","FavoriteButton","movieId","_s","dispatch","isLoggedIn","state","user","favorites","movie","movies","find","m","imdbID","isFavorite","some","favMovie","handleFavoriteClick","toggleFavorite","error","onClick","color","children","sx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/FavouriteButton/FavoriteButton.tsx"],"sourcesContent":["import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\n\nimport { toast } from \"react-toastify\";\n\ninterface FavoriteButtonProps {\n  movieId: string;\n}\n\nconst FavoriteButton: React.FC<FavoriteButtonProps> = ({ movieId }) => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const favorites = useSelector(\n    (state: RootState) => state.favorites.favorites\n  );\n  const movie = useSelector((state: RootState) =>\n    state.movies.movies.find((m) => m.imdbID === movieId)\n  );\n\n  const isFavorite = favorites.some((favMovie) => favMovie.imdbID === movieId);\n\n  const handleFavoriteClick = () => {\n    if (isLoggedIn) {\n      if (movie) {\n        dispatch(toggleFavorite(movie));\n      } else {\n        toast.error(\"Movie not found.\");\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n\n  return (\n    <IconButton\n      onClick={handleFavoriteClick}\n      color={isFavorite ? \"secondary\" : \"default\"}\n    >\n      {isFavorite ? <FavoriteIcon sx={{ color: \"red\" }} /> : <FavoriteBorder />}\n    </IconButton>\n  );\n};\n\nexport default FavoriteButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAGtD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,UAAU,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,SAAS,GAAGX,WAAW,CAC1BS,KAAgB,IAAKA,KAAK,CAACE,SAAS,CAACA,SACxC,CAAC;EACD,MAAMC,KAAK,GAAGZ,WAAW,CAAES,KAAgB,IACzCA,KAAK,CAACI,MAAM,CAACA,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKX,OAAO,CACtD,CAAC;EAED,MAAMY,UAAU,GAAGN,SAAS,CAACO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,MAAM,KAAKX,OAAO,CAAC;EAE5E,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIZ,UAAU,EAAE;MACd,IAAII,KAAK,EAAE;QACTL,QAAQ,CAACc,cAAc,CAACT,KAAK,CAAC,CAAC;MACjC,CAAC,MAAM;QACLX,KAAK,CAACqB,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF,CAAC,MAAM;MACLrB,KAAK,CAACqB,KAAK,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC;EAED,oBACEnB,OAAA,CAACP,UAAU;IACT2B,OAAO,EAAEH,mBAAoB;IAC7BI,KAAK,EAAEP,UAAU,GAAG,WAAW,GAAG,SAAU;IAAAQ,QAAA,EAE3CR,UAAU,gBAAGd,OAAA,CAACL,YAAY;MAAC4B,EAAE,EAAE;QAAEF,KAAK,EAAE;MAAM;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG3B,OAAA,CAACN,cAAc;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEjB,CAAC;AAACxB,EAAA,CAhCIF,cAA6C;EAAA,QAChCL,WAAW,EACTC,WAAW,EACZA,WAAW,EAGfA,WAAW;AAAA;AAAA+B,EAAA,GANrB3B,cAA6C;AAkCnD,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}