{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useLogin.ts\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport localforage from \"localforage\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/slices/userSlice\";\nconst useLogin = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const [loginError, setLoginError] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onSubmit = async data => {\n    try {\n      const users = (await localforage.getItem(\"users\")) || [];\n\n      // Find the user by email and password\n      const user = users.find(user => user.email === data.email && user.password === data.password);\n      if (user) {\n        setLoginError(null);\n        dispatch(login({\n          id: user.id,\n          // Correctly using the `id` field\n          name: user.name,\n          email: user.email,\n          phone: user.phone\n        }));\n\n        // Navigate to the home page\n        navigate(\"/\");\n      } else {\n        setLoginError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setLoginError(\"An error occurred during login\");\n    }\n  };\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    loginError\n  };\n};\n_s(useLogin, \"l0+vUgHpRBUi2kvJs1qvq/WkOvI=\", false, function () {\n  return [useForm, useNavigate, useDispatch];\n});\nexport default useLogin;","map":{"version":3,"names":["useState","useForm","localforage","useNavigate","useDispatch","login","useLogin","_s","register","handleSubmit","formState","errors","reset","loginError","setLoginError","navigate","dispatch","onSubmit","data","users","getItem","user","find","email","password","id","name","phone","err"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/hooks/useLogin.tsx"],"sourcesContent":["// src/hooks/useLogin.ts\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport localforage from \"localforage\";\nimport { RegisterFormInputs } from \"../utils/interface/types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/slices/userSlice\";\n\ninterface LoginFormInputs {\n  email: string;\n  password: string;\n}\n\nconst useLogin = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<LoginFormInputs>();\n  const [loginError, setLoginError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onSubmit = async (data: LoginFormInputs) => {\n    try {\n      const users =\n        (await localforage.getItem<RegisterFormInputs[]>(\"users\")) || [];\n\n      // Find the user by email and password\n      const user = users.find(\n        (user) => user.email === data.email && user.password === data.password\n      );\n\n      if (user) {\n        setLoginError(null);\n        dispatch(\n          login({\n            id: user.id, // Correctly using the `id` field\n            name: user.name,\n            email: user.email,\n            phone: user.phone,\n          })\n        );\n\n        // Navigate to the home page\n        navigate(\"/\");\n      } else {\n        setLoginError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setLoginError(\"An error occurred during login\");\n    }\n  };\n\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    loginError,\n  };\n};\n\nexport default useLogin;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,WAAW,MAAM,aAAa;AAErC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,2BAA2B;AAOjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO,CAAC;IACrBC;EACF,CAAC,GAAGX,OAAO,CAAkB,CAAC;EAC9B,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACjE,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,QAAQ,GAAG,MAAOC,IAAqB,IAAK;IAChD,IAAI;MACF,MAAMC,KAAK,GACT,CAAC,MAAMjB,WAAW,CAACkB,OAAO,CAAuB,OAAO,CAAC,KAAK,EAAE;;MAElE;MACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,IAAI,CACpBD,IAAI,IAAKA,IAAI,CAACE,KAAK,KAAKL,IAAI,CAACK,KAAK,IAAIF,IAAI,CAACG,QAAQ,KAAKN,IAAI,CAACM,QAChE,CAAC;MAED,IAAIH,IAAI,EAAE;QACRP,aAAa,CAAC,IAAI,CAAC;QACnBE,QAAQ,CACNX,KAAK,CAAC;UACJoB,EAAE,EAAEJ,IAAI,CAACI,EAAE;UAAE;UACbC,IAAI,EAAEL,IAAI,CAACK,IAAI;UACfH,KAAK,EAAEF,IAAI,CAACE,KAAK;UACjBI,KAAK,EAAEN,IAAI,CAACM;QACd,CAAC,CACH,CAAC;;QAED;QACAZ,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLD,aAAa,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZd,aAAa,CAAC,gCAAgC,CAAC;IACjD;EACF,CAAC;EAED,OAAO;IACLN,QAAQ;IACRC,YAAY;IACZQ,QAAQ;IACRN,MAAM;IACNE;EACF,CAAC;AACH,CAAC;AAACN,EAAA,CAjDID,QAAQ;EAAA,QAMRL,OAAO,EAEME,WAAW,EACXC,WAAW;AAAA;AA0C9B,eAAeE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}