{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { login } from \"../redux/slices/userSlice\";\nimport registerSchema from \"../utils/ValidatioSchema/ValidationSchema\";\nconst useRegister = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const methods = useForm({\n    resolver: yupResolver(registerSchema)\n  });\n  const {\n    handleSubmit,\n    formState\n  } = methods;\n  const [registrationError, setRegistrationError] = useState(null);\n  const onSubmit = async data => {\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/v1/register\", data);\n      cons;\n      if (res.data.success) {\n        const {\n          user\n        } = res.data;\n        dispatch(login({\n          id: user._id,\n          name: user.name,\n          email: user.email,\n          phone: user.phone\n        }));\n        setRegistrationError(null);\n        navigate(\"/login\");\n      } else {\n        setRegistrationError(\"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      setRegistrationError(\"Failed to register. Please try again.\");\n      console.error(error);\n    }\n  };\n  return {\n    ...methods,\n    handleSubmit,\n    onSubmit,\n    formState,\n    registrationError\n  };\n};\n_s(useRegister, \"Ku2LGA0773/SfuRxGhRH5ZEvpTc=\", false, function () {\n  return [useDispatch, useNavigate, useForm];\n});\nexport default useRegister;","map":{"version":3,"names":["useState","useDispatch","useForm","useNavigate","yupResolver","axios","login","registerSchema","useRegister","_s","dispatch","navigate","methods","resolver","handleSubmit","formState","registrationError","setRegistrationError","onSubmit","data","res","post","cons","success","user","id","_id","name","email","phone","error","console"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/hooks/useRegister.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm, UseFormReturn } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { login } from \"../redux/slices/userSlice\";\nimport registerSchema from \"../utils/ValidatioSchema/ValidationSchema\";\nimport { RegisterFormInputs } from \"../utils/interface/types\";\n\ninterface UseRegisterReturn extends UseFormReturn<RegisterFormInputs> {\n  onSubmit: (data: RegisterFormInputs) => void;\n  registrationError: string | null;\n}\n\nconst useRegister = (): UseRegisterReturn => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const methods = useForm<RegisterFormInputs>({\n    resolver: yupResolver(registerSchema),\n  });\n\n  const { handleSubmit, formState } = methods;\n  const [registrationError, setRegistrationError] = useState<string | null>(\n    null\n  );\n\n  const onSubmit = async (data: RegisterFormInputs) => {\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/v1/register\",\n        data\n      );\n\n      cons\n\n      if (res.data.success) {\n        const { user } = res.data;\n        dispatch(\n          login({\n            id: user._id,\n            name: user.name,\n            email: user.email,\n            phone: user.phone,\n          })\n        );\n\n        setRegistrationError(null);\n        navigate(\"/login\");\n      } else {\n        setRegistrationError(\"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      setRegistrationError(\"Failed to register. Please try again.\");\n      console.error(error);\n    }\n  };\n\n  return {\n    ...methods,\n    handleSubmit,\n    onSubmit,\n    formState,\n    registrationError,\n  };\n};\n\nexport default useRegister;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAuB,iBAAiB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,2BAA2B;AACjD,OAAOC,cAAc,MAAM,2CAA2C;AAQtE,MAAMC,WAAW,GAAGA,CAAA,KAAyB;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,OAAO,GAAGV,OAAO,CAAqB;IAC1CW,QAAQ,EAAET,WAAW,CAACG,cAAc;EACtC,CAAC,CAAC;EAEF,MAAM;IAAEO,YAAY;IAAEC;EAAU,CAAC,GAAGH,OAAO;EAC3C,MAAM,CAACI,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CACxD,IACF,CAAC;EAED,MAAMkB,QAAQ,GAAG,MAAOC,IAAwB,IAAK;IACnD,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC1B,uCAAuC,EACvCF,IACF,CAAC;MAEDG,IAAI;MAEJ,IAAIF,GAAG,CAACD,IAAI,CAACI,OAAO,EAAE;QACpB,MAAM;UAAEC;QAAK,CAAC,GAAGJ,GAAG,CAACD,IAAI;QACzBT,QAAQ,CACNJ,KAAK,CAAC;UACJmB,EAAE,EAAED,IAAI,CAACE,GAAG;UACZC,IAAI,EAAEH,IAAI,CAACG,IAAI;UACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;UACjBC,KAAK,EAAEL,IAAI,CAACK;QACd,CAAC,CACH,CAAC;QAEDZ,oBAAoB,CAAC,IAAI,CAAC;QAC1BN,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLM,oBAAoB,CAAC,wCAAwC,CAAC;MAChE;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdb,oBAAoB,CAAC,uCAAuC,CAAC;MAC7Dc,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,OAAO;IACL,GAAGlB,OAAO;IACVE,YAAY;IACZI,QAAQ;IACRH,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAACP,EAAA,CAnDID,WAAW;EAAA,QACEP,WAAW,EACXE,WAAW,EAEZD,OAAO;AAAA;AAiDzB,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}