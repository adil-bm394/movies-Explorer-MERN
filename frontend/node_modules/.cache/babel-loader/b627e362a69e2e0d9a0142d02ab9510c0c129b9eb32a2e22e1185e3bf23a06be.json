{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesPage = () => {\n  _s();\n  const {\n    movies,\n    loading,\n    error\n  } = useFetchMovies();\n  const favorites = useSelector(state => state.favorites.favorites);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  useEffect(() => {\n    if (movies.length > 0 && favorites.length > 0) {\n      const favoriteMovieIDs = new Set(favorites);\n      const filtered = movies.filter(movie => favoriteMovieIDs.has(movies.imdbID));\n      setFilteredMovies(filtered);\n    }\n  }, [movies, favorites]);\n  console.log(\"filteredMovies=>\", filteredMovies); //get empty ?\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (filteredMovies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No favorite movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      marginTop: \"15px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesPage, \"awGuAinvkNRH6QWgWocrnBtQbjs=\", false, function () {\n  return [useFetchMovies, useSelector];\n});\n_c = FavoritesPage;\nexport default FavoritesPage;\nvar _c;\n$RefreshReg$(_c, \"FavoritesPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Grid","Typography","Container","MovieCard","useFetchMovies","jsxDEV","_jsxDEV","FavoritesPage","_s","movies","loading","error","favorites","state","filteredMovies","setFilteredMovies","length","favoriteMovieIDs","Set","filtered","filter","movie","has","imdbID","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","container","spacing","map","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport { RootState } from \"../redux/store\";\nimport useFetchMovies from \"../hooks/useFetchMovies\"; \nimport { Movie } from \"../utils/interface/types\";\n\nconst FavoritesPage: React.FC = () => {\n  const { movies, loading, error } = useFetchMovies(); \n  const favorites = useSelector(\n    (state: RootState) => state.favorites.favorites\n  );\n\n  const [filteredMovies, setFilteredMovies] = useState<Movie[]>([]);\n\n   useEffect(() => {\n     if (movies.length > 0 && favorites.length > 0) {\n       const favoriteMovieIDs = new Set(favorites);\n\n       const filtered = movies.filter((movie) =>\n         favoriteMovieIDs.has(movies.imdbID)\n       );\n       setFilteredMovies(filtered);\n     }\n   }, [movies, favorites]);\n\n  console.log(\"filteredMovies=>\", filteredMovies);//get empty ?\n  if (loading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  if (error) {\n    return <Typography>Error: {error}</Typography>;\n  }\n\n  if (filteredMovies.length === 0) {\n    return <Typography>No favorite movies found.</Typography>;\n  }\n\n  return (\n    <Container sx={{ marginTop: \"15px\" }}>\n      <Grid container spacing={3}>\n        {filteredMovies.map((movie) => (\n          <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n            <MovieCard movie={movie} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default FavoritesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}