{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport { useSelector } from \"react-redux\";\n\n// Define a simplified Movie type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritePage = () => {\n  _s();\n  // Assuming favorites are stored in the Redux store\n  const favoriteMovies = useSelector(state => state.favorites.favorites // Corrected from `movies` to `favorites`\n  );\n\n  // Map to the simplified movie structure\n  const simplifiedMovies = favoriteMovies.map(movie => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID\n  }));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  if (favorites.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No favorite movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      width: \"92%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: simplifiedMovies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritePage, \"Od+HdTyF92mPIhIphK10wyrQGMc=\", false, function () {\n  return [useSelector];\n});\n_c = FavoritePage;\nexport default FavoritePage;\nvar _c;\n$RefreshReg$(_c, \"FavoritePage\");","map":{"version":3,"names":["React","Typography","Container","Grid","MovieCard","useSelector","jsxDEV","_jsxDEV","FavoritePage","_s","favoriteMovies","state","favorites","simplifiedMovies","map","movie","Title","Poster","Year","imdbRating","Genre","imdbID","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","error","length","sx","width","container","spacing","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\n\n// Define a simplified Movie type\ninterface SimplifiedMovie {\n  Title: string;\n  Poster: string;\n  Year: string;\n  imdbRating: string;\n  Genre: string;\n  imdbID: string;\n}\n\nconst FavoritePage: React.FC = () => {\n  // Assuming favorites are stored in the Redux store\n  const favoriteMovies = useSelector(\n    (state: RootState) => state.favorites.favorites // Corrected from `movies` to `favorites`\n  );\n\n  // Map to the simplified movie structure\n  const simplifiedMovies: SimplifiedMovie[] = favoriteMovies.map((movie) => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID,\n  }));\n\n\n  if (loading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  if (error) {\n    return <Typography>Error: {error}</Typography>;\n  }\n\n  if (favorites.length === 0) {\n    return <Typography>No favorite movies found.</Typography>;\n  }\n\n\n  return (\n    <Container sx={{ width: \"92%\" }}>\n      <Grid container spacing={3}>\n        {simplifiedMovies.map((movie) => (\n          <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n            <MovieCard movie={movie} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default FavoritePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,WAAW,QAAQ,aAAa;;AAGzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC;EACA,MAAMC,cAAc,GAAGL,WAAW,CAC/BM,KAAgB,IAAKA,KAAK,CAACC,SAAS,CAACA,SAAS,CAAC;EAClD,CAAC;;EAED;EACA,MAAMC,gBAAmC,GAAGH,cAAc,CAACI,GAAG,CAAEC,KAAK,KAAM;IACzEC,KAAK,EAAED,KAAK,CAACC,KAAK;IAClBC,MAAM,EAAEF,KAAK,CAACE,MAAM;IACpBC,IAAI,EAAEH,KAAK,CAACG,IAAI;IAChBC,UAAU,EAAEJ,KAAK,CAACI,UAAU;IAC5BC,KAAK,EAAEL,KAAK,CAACK,KAAK;IAClBC,MAAM,EAAEN,KAAK,CAACM;EAChB,CAAC,CAAC,CAAC;EAGH,IAAIC,OAAO,EAAE;IACX,oBAAOf,OAAA,CAACN,UAAU;MAAAsB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAC5C;EAEA,IAAIC,KAAK,EAAE;IACT,oBAAOrB,OAAA,CAACN,UAAU;MAAAsB,QAAA,GAAC,SAAO,EAACK,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAChD;EAEA,IAAIf,SAAS,CAACiB,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAOtB,OAAA,CAACN,UAAU;MAAAsB,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAC3D;EAGA,oBACEpB,OAAA,CAACL,SAAS;IAAC4B,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAR,QAAA,eAC9BhB,OAAA,CAACJ,IAAI;MAAC6B,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAV,QAAA,EACxBV,gBAAgB,CAACC,GAAG,CAAEC,KAAK,iBAC1BR,OAAA,CAACJ,IAAI;QAAC+B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eAC9BhB,OAAA,CAACH,SAAS;UAACW,KAAK,EAAEA;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADSZ,KAAK,CAACM,MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5C,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAAClB,EAAA,CAzCID,YAAsB;EAAA,QAEHH,WAAW;AAAA;AAAAiC,EAAA,GAF9B9B,YAAsB;AA2C5B,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}