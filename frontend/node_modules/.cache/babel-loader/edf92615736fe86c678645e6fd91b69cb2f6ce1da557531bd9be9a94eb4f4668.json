{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesListPage = () => {\n  _s();\n  const {\n    movies,\n    loading,\n    error\n  } = useFetchMovies();\n  const searchTerm = useSelector(state => state.search.term.toLowerCase());\n  const filteredMovies = movies.filter(movie => movie.Title.toLowerCase().includes(searchTerm));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Map to the simplified movie structure\n  const simplifiedMovies = filteredMovies.map(movie => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"92%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: simplifiedMovies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, movie.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MoviesListPage, \"r40Qn4k6vIgodmKqeVqL0gpBWzo=\", false, function () {\n  return [useFetchMovies, useSelector];\n});\n_c = MoviesListPage;\nexport default MoviesListPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesListPage\");","map":{"version":3,"names":["React","Typography","Container","Grid","MovieCard","useFetchMovies","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesListPage","_s","movies","loading","error","searchTerm","state","search","term","toLowerCase","filteredMovies","filter","movie","Title","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","simplifiedMovies","map","Poster","Year","imdbRating","Genre","imdbID","sx","width","container","spacing","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\n\n\ninterface SimplifiedMovie {\n  Title: string;\n  Poster: string;\n  Year: string;\n  imdbRating: string;\n  Genre: string;\n  imdbID: string;\n}\n\nconst MoviesListPage: React.FC = () => {\n  const { movies, loading, error } = useFetchMovies();\n  const searchTerm = useSelector((state: RootState) =>\n    state.search.term.toLowerCase()\n  );\n\n  const filteredMovies = movies.filter((movie) =>\n    movie.Title.toLowerCase().includes(searchTerm)\n  );\n\n  if (loading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  if (error) {\n    return <Typography>Error: {error}</Typography>;\n  }\n\n  // Map to the simplified movie structure\n  const simplifiedMovies: SimplifiedMovie[] = filteredMovies.map((movie) => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID,\n  }));\n\n  return (\n    <>\n      <Container sx={{ width: \"92%\" }}>\n        <Grid container spacing={3}>\n          {simplifiedMovies.map((movie) => (\n            <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n              <MovieCard movie={movie} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAa1C,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,cAAc,CAAC,CAAC;EACnD,MAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAgB,IAC9CA,KAAK,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAChC,CAAC;EAED,MAAMC,cAAc,GAAGR,MAAM,CAACS,MAAM,CAAEC,KAAK,IACzCA,KAAK,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACT,UAAU,CAC/C,CAAC;EAED,IAAIF,OAAO,EAAE;IACX,oBAAON,OAAA,CAACP,UAAU;MAAAyB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAC5C;EAEA,IAAIf,KAAK,EAAE;IACT,oBAAOP,OAAA,CAACP,UAAU;MAAAyB,QAAA,GAAC,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAChD;;EAEA;EACA,MAAMC,gBAAmC,GAAGV,cAAc,CAACW,GAAG,CAAET,KAAK,KAAM;IACzEC,KAAK,EAAED,KAAK,CAACC,KAAK;IAClBS,MAAM,EAAEV,KAAK,CAACU,MAAM;IACpBC,IAAI,EAAEX,KAAK,CAACW,IAAI;IAChBC,UAAU,EAAEZ,KAAK,CAACY,UAAU;IAC5BC,KAAK,EAAEb,KAAK,CAACa,KAAK;IAClBC,MAAM,EAAEd,KAAK,CAACc;EAChB,CAAC,CAAC,CAAC;EAEH,oBACE7B,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACN,SAAS;MAACoC,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,eAC9BlB,OAAA,CAACL,IAAI;QAACqC,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAf,QAAA,EACxBK,gBAAgB,CAACC,GAAG,CAAET,KAAK,iBAC1Bf,OAAA,CAACL,IAAI;UAACuC,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAnB,QAAA,eAC9BlB,OAAA,CAACJ,SAAS;YAACmB,KAAK,EAAEA;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADSP,KAAK,CAACc,MAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5C,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACZ,CAAC;AAEP,CAAC;AAAClB,EAAA,CAzCID,cAAwB;EAAA,QACON,cAAc,EAC9BC,WAAW;AAAA;AAAAwC,EAAA,GAF1BnC,cAAwB;AA2C9B,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}