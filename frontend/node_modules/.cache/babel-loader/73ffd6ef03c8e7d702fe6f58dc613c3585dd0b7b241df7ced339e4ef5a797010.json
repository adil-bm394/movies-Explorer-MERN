{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavoritePage = () => {\n  _s();\n  // Assuming favorites are stored in the Redux store\n  const favoriteMovies = useSelector(state => state.favorites.movies);\n\n  // Map to the simplified movie structure\n  const simplifiedMovies = favoriteMovies.map(movie => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: \"92%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: simplifiedMovies.map(movie => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, movie.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FavoritePage, \"Od+HdTyF92mPIhIphK10wyrQGMc=\", false, function () {\n  return [useSelector];\n});\n_c = FavoritePage;\nexport default FavoritePage;\nvar _c;\n$RefreshReg$(_c, \"FavoritePage\");","map":{"version":3,"names":["React","Container","Grid","MovieCard","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","FavoritePage","_s","favoriteMovies","state","favorites","movies","simplifiedMovies","map","movie","Title","Poster","Year","imdbRating","Genre","imdbID","children","sx","width","container","spacing","item","xs","sm","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/FavouritesPage.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\n\nconst FavoritePage: React.FC = () => {\n  // Assuming favorites are stored in the Redux store\n  const favoriteMovies = useSelector(\n    (state: RootState) => state.favorites.movies\n  );\n\n  // Map to the simplified movie structure\n  const simplifiedMovies = favoriteMovies.map((movie) => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID,\n  }));\n\n  return (\n    <>\n      <Container sx={{ width: \"92%\" }}>\n        <Grid container spacing={3}>\n          {simplifiedMovies.map((movie) => (\n            <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n              <MovieCard movie={movie} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC;EACA,MAAMC,cAAc,GAAGP,WAAW,CAC/BQ,KAAgB,IAAKA,KAAK,CAACC,SAAS,CAACC,MACxC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGJ,cAAc,CAACK,GAAG,CAAEC,KAAK,KAAM;IACtDC,KAAK,EAAED,KAAK,CAACC,KAAK;IAClBC,MAAM,EAAEF,KAAK,CAACE,MAAM;IACpBC,IAAI,EAAEH,KAAK,CAACG,IAAI;IAChBC,UAAU,EAAEJ,KAAK,CAACI,UAAU;IAC5BC,KAAK,EAAEL,KAAK,CAACK,KAAK;IAClBC,MAAM,EAAEN,KAAK,CAACM;EAChB,CAAC,CAAC,CAAC;EAEH,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACL,SAAS;MAACwB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,eAC9BlB,OAAA,CAACJ,IAAI;QAACyB,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAJ,QAAA,EACxBT,gBAAgB,CAACC,GAAG,CAAEC,KAAK,iBAC1BX,OAAA,CAACJ,IAAI;UAAC2B,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAR,QAAA,eAC9BlB,OAAA,CAACH,SAAS;YAACc,KAAK,EAAEA;UAAM;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADSnB,KAAK,CAACM,MAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5C,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACZ,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA7BID,YAAsB;EAAA,QAEHL,WAAW;AAAA;AAAAiC,EAAA,GAF9B5B,YAAsB;AA+B5B,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}