{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/FavouriteButton/FavoriteButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFavorite, removeFavorite } from \"../../redux/slices/favoritesSlice\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteButton = ({\n  movieId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const favorites = useSelector(state => state.favorites.favorites);\n  const movie = useSelector(state => state.movies.movies.find(m => m.imdbID === movieId));\n  const isFavorite = favorites.some(favMovie => favMovie.imdbID === movieId);\n  const [localIsFavorite, setLocalIsFavorite] = useState(isFavorite);\n  useEffect(() => {\n    setLocalIsFavorite(isFavorite);\n  }, [isFavorite]);\n  const handleFavoriteClick = () => {\n    if (isLoggedIn) {\n      if (movie) {\n        if (localIsFavorite) {\n          dispatch(removeFavorite(movie.imdbID));\n          setLocalIsFavorite(false);\n        } else {\n          dispatch(addFavorite(movie));\n          setLocalIsFavorite(true);\n        }\n      } else {\n        toast.error(\"Movie not found.\");\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleFavoriteClick,\n    color: localIsFavorite ? \"secondary\" : \"default\",\n    children: localIsFavorite ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      sx: {\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteButton, \"6NxDYnNlImoeDeujl+BXvrCHMwI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = FavoriteButton;\nexport default FavoriteButton;\nvar _c;\n$RefreshReg$(_c, \"FavoriteButton\");","map":{"version":3,"names":["React","useState","useEffect","IconButton","FavoriteBorder","FavoriteIcon","useDispatch","useSelector","addFavorite","removeFavorite","toast","jsxDEV","_jsxDEV","FavoriteButton","movieId","_s","dispatch","isLoggedIn","state","user","favorites","movie","movies","find","m","imdbID","isFavorite","some","favMovie","localIsFavorite","setLocalIsFavorite","handleFavoriteClick","error","onClick","color","children","sx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/utils/FavouriteButton/FavoriteButton.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { addFavorite, removeFavorite } from \"../../redux/slices/favoritesSlice\";\nimport { toast } from \"react-toastify\";\n\ninterface FavoriteButtonProps {\n  movieId: string;\n}\n\nconst FavoriteButton: React.FC<FavoriteButtonProps> = ({ movieId }) => {\n  const dispatch: AppDispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const favorites = useSelector(\n    (state: RootState) => state.favorites.favorites\n  );\n  const movie = useSelector((state: RootState) =>\n    state.movies.movies.find((m) => m.imdbID === movieId)\n  );\n\n  const isFavorite = favorites.some((favMovie) => favMovie.imdbID === movieId);\n  const [localIsFavorite, setLocalIsFavorite] = useState(isFavorite);\n\n  useEffect(() => {\n    setLocalIsFavorite(isFavorite);\n  }, [isFavorite]);\n\n  const handleFavoriteClick = () => {\n    if (isLoggedIn) {\n      if (movie) {\n        if (localIsFavorite) {\n          dispatch(removeFavorite(movie.imdbID));\n          setLocalIsFavorite(false);\n        } else {\n          dispatch(addFavorite(movie));\n          setLocalIsFavorite(true);\n        }\n      } else {\n        toast.error(\"Movie not found.\");\n      }\n    } else {\n      toast.error(\"You must be logged in to add favorite movies.\");\n    }\n  };\n\n  return (\n    <IconButton\n      onClick={handleFavoriteClick}\n      color={localIsFavorite ? \"secondary\" : \"default\"}\n    >\n      {localIsFavorite ? (\n        <FavoriteIcon sx={{ color: \"red\" }} />\n      ) : (\n        <FavoriteBorder />\n      )}\n    </IconButton>\n  );\n};\n\nexport default FavoriteButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,WAAW,EAAEC,cAAc,QAAQ,mCAAmC;AAC/E,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAMC,QAAqB,GAAGV,WAAW,CAAC,CAAC;EAC3C,MAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC3E,MAAMG,SAAS,GAAGb,WAAW,CAC1BW,KAAgB,IAAKA,KAAK,CAACE,SAAS,CAACA,SACxC,CAAC;EACD,MAAMC,KAAK,GAAGd,WAAW,CAAEW,KAAgB,IACzCA,KAAK,CAACI,MAAM,CAACA,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKX,OAAO,CACtD,CAAC;EAED,MAAMY,UAAU,GAAGN,SAAS,CAACO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACH,MAAM,KAAKX,OAAO,CAAC;EAC5E,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAACyB,UAAU,CAAC;EAElExB,SAAS,CAAC,MAAM;IACd4B,kBAAkB,CAACJ,UAAU,CAAC;EAChC,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAId,UAAU,EAAE;MACd,IAAII,KAAK,EAAE;QACT,IAAIQ,eAAe,EAAE;UACnBb,QAAQ,CAACP,cAAc,CAACY,KAAK,CAACI,MAAM,CAAC,CAAC;UACtCK,kBAAkB,CAAC,KAAK,CAAC;QAC3B,CAAC,MAAM;UACLd,QAAQ,CAACR,WAAW,CAACa,KAAK,CAAC,CAAC;UAC5BS,kBAAkB,CAAC,IAAI,CAAC;QAC1B;MACF,CAAC,MAAM;QACLpB,KAAK,CAACsB,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF,CAAC,MAAM;MACLtB,KAAK,CAACsB,KAAK,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC;EAED,oBACEpB,OAAA,CAACT,UAAU;IACT8B,OAAO,EAAEF,mBAAoB;IAC7BG,KAAK,EAAEL,eAAe,GAAG,WAAW,GAAG,SAAU;IAAAM,QAAA,EAEhDN,eAAe,gBACdjB,OAAA,CAACP,YAAY;MAAC+B,EAAE,EAAE;QAAEF,KAAK,EAAE;MAAM;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEtC5B,OAAA,CAACR,cAAc;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB,CAAC;AAACzB,EAAA,CA/CIF,cAA6C;EAAA,QACnBP,WAAW,EACtBC,WAAW,EACZA,WAAW,EAGfA,WAAW;AAAA;AAAAkC,EAAA,GANrB5B,cAA6C;AAiDnD,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}