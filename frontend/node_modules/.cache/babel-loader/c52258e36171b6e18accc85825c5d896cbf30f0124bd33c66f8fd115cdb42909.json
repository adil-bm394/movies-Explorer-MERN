{"ast":null,"code":"import React from\"react\";import Typography from\"@mui/material/Typography\";import Container from\"@mui/material/Container\";import Grid from\"@mui/material/Grid\";import MovieCard from\"../components/common/MovieCard\";import useFetchMovies from\"../hooks/useFetchMovies\";import{useSelector}from\"react-redux\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MoviesListPage=()=>{const{movies,loading,error}=useFetchMovies();const searchTerm=useSelector(state=>state.search.term.toLowerCase());const filteredMovies=movies.filter(movie=>movie.Title.toLowerCase().includes(searchTerm));if(loading){return/*#__PURE__*/_jsx(Typography,{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(Typography,{children:[\"Error: \",error]});}const simplifiedMovies=filteredMovies.map(movie=>({Title:movie.Title,Poster:movie.Poster,Year:movie.Year,imdbRating:movie.imdbRating,Genre:movie.Genre,imdbID:movie.imdbID}));return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{sx:{width:\"92%\"},children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:simplifiedMovies.map(movie=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(MovieCard,{movie:movie})},movie.imdbID))})})});};export default MoviesListPage;","map":{"version":3,"names":["React","Typography","Container","Grid","MovieCard","useFetchMovies","useSelector","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MoviesListPage","movies","loading","error","searchTerm","state","search","term","toLowerCase","filteredMovies","filter","movie","Title","includes","children","simplifiedMovies","map","Poster","Year","imdbRating","Genre","imdbID","sx","width","container","spacing","item","xs","sm","md"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/pages/MoviesListPage.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MovieCard from \"../components/common/MovieCard\";\nimport useFetchMovies from \"../hooks/useFetchMovies\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nimport { SimplifiedMovie } from \"../utils/interface/types\";\n\nconst MoviesListPage: React.FC = () => {\n  const { movies, loading, error } = useFetchMovies();\n  const searchTerm = useSelector((state: RootState) =>\n    state.search.term.toLowerCase()\n  );\n  const filteredMovies = movies.filter((movie) =>\n    movie.Title.toLowerCase().includes(searchTerm)\n  );\n\n if (loading) {\n   return <Typography>Loading...</Typography>;\n }\n\n if (error) {\n   return <Typography>Error: {error}</Typography>;\n }\n\n\n  const simplifiedMovies: SimplifiedMovie[] = filteredMovies.map((movie) => ({\n    Title: movie.Title,\n    Poster: movie.Poster,\n    Year: movie.Year,\n    imdbRating: movie.imdbRating,\n    Genre: movie.Genre,\n    imdbID: movie.imdbID,\n  }));\n\n  return (\n    <>\n      <Container sx={{ width: \"92%\" }}>\n        <Grid container spacing={3}>\n          {simplifiedMovies.map((movie) => (\n            <Grid item xs={12} sm={6} md={4} key={movie.imdbID}>\n              <MovieCard movie={movie} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesListPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,SAAS,KAAM,gCAAgC,CACtD,MAAO,CAAAC,cAAc,KAAM,yBAAyB,CACpD,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAI1C,KAAM,CAAAC,cAAwB,CAAGA,CAAA,GAAM,CACrC,KAAM,CAAEC,MAAM,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGX,cAAc,CAAC,CAAC,CACnD,KAAM,CAAAY,UAAU,CAAGX,WAAW,CAAEY,KAAgB,EAC9CA,KAAK,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAChC,CAAC,CACD,KAAM,CAAAC,cAAc,CAAGR,MAAM,CAACS,MAAM,CAAEC,KAAK,EACzCA,KAAK,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACT,UAAU,CAC/C,CAAC,CAEF,GAAIF,OAAO,CAAE,CACX,mBAAOP,IAAA,CAACP,UAAU,EAAA0B,QAAA,CAAC,YAAU,CAAY,CAAC,CAC5C,CAEA,GAAIX,KAAK,CAAE,CACT,mBAAON,KAAA,CAACT,UAAU,EAAA0B,QAAA,EAAC,SAAO,CAACX,KAAK,EAAa,CAAC,CAChD,CAGC,KAAM,CAAAY,gBAAmC,CAAGN,cAAc,CAACO,GAAG,CAAEL,KAAK,GAAM,CACzEC,KAAK,CAAED,KAAK,CAACC,KAAK,CAClBK,MAAM,CAAEN,KAAK,CAACM,MAAM,CACpBC,IAAI,CAAEP,KAAK,CAACO,IAAI,CAChBC,UAAU,CAAER,KAAK,CAACQ,UAAU,CAC5BC,KAAK,CAAET,KAAK,CAACS,KAAK,CAClBC,MAAM,CAAEV,KAAK,CAACU,MAChB,CAAC,CAAC,CAAC,CAEH,mBACE1B,IAAA,CAAAI,SAAA,EAAAe,QAAA,cACEnB,IAAA,CAACN,SAAS,EAACiC,EAAE,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAT,QAAA,cAC9BnB,IAAA,CAACL,IAAI,EAACkC,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAX,QAAA,CACxBC,gBAAgB,CAACC,GAAG,CAAEL,KAAK,eAC1BhB,IAAA,CAACL,IAAI,EAACoC,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAf,QAAA,cAC9BnB,IAAA,CAACJ,SAAS,EAACoB,KAAK,CAAEA,KAAM,CAAE,CAAC,EADSA,KAAK,CAACU,MAEtC,CACP,CAAC,CACE,CAAC,CACE,CAAC,CACZ,CAAC,CAEP,CAAC,CAED,cAAe,CAAArB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}