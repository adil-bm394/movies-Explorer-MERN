{"ast":null,"code":"// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import { Movie } from \"../../utils/interface/types\";\n\n// interface FavoritesState {\n//   favorites: {\n//     favorites: Movie[]; // Assuming you store movie IDs\n//     success: string;\n//   };\n//   loading: boolean;\n//   error: string | null;\n// }\n// ///////////////////////////\n// const initialState: FavoritesState = {\n//   favorites: {\n//     favorites: [],\n//     success: \"false\",\n//   },\n//   loading: false,\n//   error: null,\n// };\n\n// export const addFavorite = createAsyncThunk(\n//   \"favorites/addFavorite\",\n//   async (movie: Movie, { rejectWithValue, getState }) => {\n//     const state: any = getState();\n//     const token = state.user.userDetails?.token;\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/addFavorite\",\n//         { movieId: movie.imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       return response.data;\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n// export const removeFavorite = createAsyncThunk(\n//   \"favorites/removeFavorite\",\n//   async (imdbID: string, { rejectWithValue, getState }) => {\n//     const state: any = getState();\n//     const token = state.user.userDetails?.token;\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/removeFavorite\",\n//         { movieId: imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       return { imdbID };\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState,\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(addFavorite.pending, (state) => {\n//         state.loading = true;\n//       })\n//       .addCase(addFavorite.fulfilled, (state, action) => {\n//         state.loading = false;\n\n//         console.log(\"Add Favorite Fulfilled Action Payload:\", action.payload);\n//         console.log(\n//           \"Add Favorite Fulfilled Action Payload.favourites:\",\n//           action.payload.favorites\n//         );\n\n//         if (\n//           !state.favorites.some(\n//             (movie) => movie?.imdbID === action.payload.imdbID\n//           )\n//         ) {\n//           state.favorites = action.payload;\n//         }\n//       })\n//       .addCase(addFavorite.rejected, (state, action) => {\n//         state.loading = false;\n//         state.error = action.payload as string;\n//       })\n//       .addCase(removeFavorite.pending, (state) => {\n//         state.loading = true;\n//       })\n//       .addCase(removeFavorite.fulfilled, (state, action) => {\n//         state.loading = false;\n\n//         console.log(\n//           \"Remove Favorite Fulfilled Action Payload:\",\n//           action.payload\n//         );\n\n//         state.favorites = state.favorites.filter(\n//           (movie) => movie?.imdbID !== action.payload.imdbID\n//         );\n//       })\n//       .addCase(removeFavorite.rejected, (state, action) => {\n//         state.loading = false;\n//         state.error = action.payload as string;\n//       });\n//   },\n// });\n\n// export default favoritesSlice.reducer;\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  favorites: {\n    favorites: [],\n    success: \"false\"\n  },\n  loading: false,\n  error: null\n};\nexport const addFavorite = createAsyncThunk(\"favorites/addFavorite\", async (movie, {\n  rejectWithValue,\n  getState\n}) => {\n  var _state$user$userDetai;\n  const state = getState();\n  const token = (_state$user$userDetai = state.user.userDetails) === null || _state$user$userDetai === void 0 ? void 0 : _state$user$userDetai.token;\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/v1/addFavorite\", {\n      movieId: movie.imdbID\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nexport const removeFavorite = createAsyncThunk(\"favorites/removeFavorite\", async (imdbID, {\n  rejectWithValue,\n  getState\n}) => {\n  var _state$user$userDetai2;\n  const state = getState();\n  const token = (_state$user$userDetai2 = state.user.userDetails) === null || _state$user$userDetai2 === void 0 ? void 0 : _state$user$userDetai2.token;\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/v1/removeFavorite\", {\n      movieId: imdbID\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      imdbID\n    };\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(addFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      if (!state.favorites.favorites.includes(action.payload.imdbID)) {\n        state.favorites.favorites.push(action.payload.imdbID);\n      }\n      state.favorites.success = action.payload.success;\n    }).addCase(addFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(removeFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(removeFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites.favorites = state.favorites.favorites.filter(id => id !== action.payload.imdbID);\n    }).addCase(removeFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","favorites","success","loading","error","addFavorite","movie","rejectWithValue","getState","_state$user$userDetai","state","token","user","userDetails","response","post","movieId","imdbID","headers","Authorization","data","message","removeFavorite","_state$user$userDetai2","favoritesSlice","name","reducers","extraReducers","builder","addCase","pending","fulfilled","action","includes","payload","push","rejected","filter","id","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/favoritesSlice.tsx"],"sourcesContent":["// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import { Movie } from \"../../utils/interface/types\";\n\n// interface FavoritesState {\n//   favorites: {\n//     favorites: Movie[]; // Assuming you store movie IDs\n//     success: string;\n//   };\n//   loading: boolean;\n//   error: string | null;\n// }\n// ///////////////////////////\n// const initialState: FavoritesState = {\n//   favorites: {\n//     favorites: [],\n//     success: \"false\",\n//   },\n//   loading: false,\n//   error: null,\n// };\n\n// export const addFavorite = createAsyncThunk(\n//   \"favorites/addFavorite\",\n//   async (movie: Movie, { rejectWithValue, getState }) => {\n//     const state: any = getState();\n//     const token = state.user.userDetails?.token;\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/addFavorite\",\n//         { movieId: movie.imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       return response.data;\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n// export const removeFavorite = createAsyncThunk(\n//   \"favorites/removeFavorite\",\n//   async (imdbID: string, { rejectWithValue, getState }) => {\n//     const state: any = getState();\n//     const token = state.user.userDetails?.token;\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/v1/removeFavorite\",\n//         { movieId: imdbID },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       return { imdbID };\n//     } catch (error: any) {\n//       return rejectWithValue(\n//         error.response ? error.response.data : error.message\n//       );\n//     }\n//   }\n// );\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState,\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(addFavorite.pending, (state) => {\n//         state.loading = true;\n//       })\n//       .addCase(addFavorite.fulfilled, (state, action) => {\n//         state.loading = false;\n\n//         console.log(\"Add Favorite Fulfilled Action Payload:\", action.payload);\n//         console.log(\n//           \"Add Favorite Fulfilled Action Payload.favourites:\",\n//           action.payload.favorites\n//         );\n\n//         if (\n//           !state.favorites.some(\n//             (movie) => movie?.imdbID === action.payload.imdbID\n//           )\n//         ) {\n//           state.favorites = action.payload;\n//         }\n//       })\n//       .addCase(addFavorite.rejected, (state, action) => {\n//         state.loading = false;\n//         state.error = action.payload as string;\n//       })\n//       .addCase(removeFavorite.pending, (state) => {\n//         state.loading = true;\n//       })\n//       .addCase(removeFavorite.fulfilled, (state, action) => {\n//         state.loading = false;\n\n//         console.log(\n//           \"Remove Favorite Fulfilled Action Payload:\",\n//           action.payload\n//         );\n\n//         state.favorites = state.favorites.filter(\n//           (movie) => movie?.imdbID !== action.payload.imdbID\n//         );\n//       })\n//       .addCase(removeFavorite.rejected, (state, action) => {\n//         state.loading = false;\n//         state.error = action.payload as string;\n//       });\n//   },\n// });\n\n// export default favoritesSlice.reducer;\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie } from \"../../utils/interface/types\";\n\ninterface FavoritesState {\n  favorites: {\n    favorites: string[]; // Assuming you store movie IDs\n    success: string;\n  };\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: FavoritesState = {\n  favorites: {\n    favorites: [],\n    success: \"false\",\n  },\n  loading: false,\n  error: null,\n};\n\nexport const addFavorite = createAsyncThunk(\n  \"favorites/addFavorite\",\n  async (movie: Movie, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const token = state.user.userDetails?.token;\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/v1/addFavorite\",\n        { movieId: movie.imdbID },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      return response.data;\n    } catch (error: any) {\n      return rejectWithValue(\n        error.response ? error.response.data : error.message\n      );\n    }\n  }\n);\n\nexport const removeFavorite = createAsyncThunk(\n  \"favorites/removeFavorite\",\n  async (imdbID: string, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const token = state.user.userDetails?.token;\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/v1/removeFavorite\",\n        { movieId: imdbID },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      return { imdbID };\n    } catch (error: any) {\n      return rejectWithValue(\n        error.response ? error.response.data : error.message\n      );\n    }\n  }\n);\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(addFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(addFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        if (\n          !state.favorites.favorites.includes(action.payload.imdbID)\n        ) {\n          state.favorites.favorites.push(action.payload.imdbID);\n        }\n        state.favorites.success = action.payload.success;\n      })\n      .addCase(addFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(removeFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(removeFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites.favorites = state.favorites.favorites.filter(\n          (id) => id !== action.payload.imdbID\n        );\n      })\n      .addCase(removeFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport default favoritesSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAYzB,MAAMC,YAA4B,GAAG;EACnCC,SAAS,EAAE;IACTA,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACX,CAAC;EACDC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGR,gBAAgB,CACzC,uBAAuB,EACvB,OAAOS,KAAY,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAAA,IAAAC,qBAAA;EACrD,MAAMC,KAAU,GAAGF,QAAQ,CAAC,CAAC;EAC7B,MAAMG,KAAK,IAAAF,qBAAA,GAAGC,KAAK,CAACE,IAAI,CAACC,WAAW,cAAAJ,qBAAA,uBAAtBA,qBAAA,CAAwBE,KAAK;EAE3C,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,0CAA0C,EAC1C;MAAEC,OAAO,EAAEV,KAAK,CAACW;IAAO,CAAC,EACzB;MAAEC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUR,KAAK;MAAG;IAAE,CAClD,CAAC;IACD,OAAOG,QAAQ,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}