{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  movies: [],\n  loading: false,\n  error: null\n};\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\"https://64c3af5b620f470f9014abc97971528a.api.mockbin.io/\");\n  const movies = response.data.map(movie => ({\n    ...movie,\n    comments: [],\n    ratings: []\n  }));\n  return movies;\n});\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addComment: (state, action) => {\n      const {\n        movieId,\n        comment,\n        userId,\n        userName\n      } = action.payload;\n      const movie = state.movies.find(m => m.imdbID === movieId);\n      if (movie) {\n        movie.comments.push({\n          userId,\n          userName,\n          comment\n        });\n      }\n    },\n    addRating: (state, action) => {\n      const {\n        movieId,\n        rating,\n        userId,\n        userName\n      } = action.payload;\n      const movie = state.movies.find(m => m.imdbID === movieId);\n      if (movie) {\n        movie.ratings.push({\n          userId,\n          userName,\n          rating\n        });\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMovies.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovies.fulfilled, (state, action) => {\n      state.loading = false;\n      state.movies = action.payload;\n    }).addCase(fetchMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch movies\";\n    });\n  }\n});\nexport const {\n  addComment,\n  addRating\n} = moviesSlice.actions;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","movies","loading","error","fetchMovies","response","get","data","map","movie","comments","ratings","moviesSlice","name","reducers","addComment","state","action","movieId","comment","userId","userName","payload","find","m","imdbID","push","addRating","rating","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/moviesSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie, MoviesState } from \"../../utils/interface/types\";\n\nconst initialState: MoviesState = {\n  movies: [],\n  loading: false,\n  error: null,\n};\n\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", async () => {\n  const response = await axios.get(\n    \"https://64c3af5b620f470f9014abc97971528a.api.mockbin.io/\"\n  );\n  const movies = response.data.map((movie: Movie) => ({\n    ...movie,\n    comments: [],\n    ratings: [],\n  }));\n  return movies;\n});\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addComment: (\n      state,\n      action: PayloadAction<{\n        movieId: string;\n        comment: string;\n        userId: string;\n        userName: string;\n      }>\n    ) => {\n      const { movieId, comment, userId, userName } = action.payload;\n      const movie = state.movies.find((m) => m.imdbID === movieId);\n      if (movie) {\n        movie.comments.push({ userId, userName, comment });\n      }\n    },\n    addRating: (\n      state,\n      action: PayloadAction<{\n        movieId: string;\n        rating: number;\n        userId: string;\n        userName: string;\n      }>\n    ) => {\n      const { movieId, rating, userId, userName } = action.payload;\n      const movie = state.movies.find((m) => m.imdbID === movieId);\n      if (movie) {\n        movie.ratings.push({ userId, userName, rating });\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovies.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchMovies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.movies = action.payload;\n      })\n      .addCase(fetchMovies.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch movies\";\n      });\n  },\n});\n\nexport const { addComment, addRating } = moviesSlice.actions;\nexport default moviesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC5E,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC9B,0DACF,CAAC;EACD,MAAML,MAAM,GAAGI,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,KAAY,KAAM;IAClD,GAAGA,KAAK;IACRC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;EACH,OAAOV,MAAM;AACf,CAAC,CAAC;AAEF,MAAMW,WAAW,GAAGf,WAAW,CAAC;EAC9BgB,IAAI,EAAE,QAAQ;EACdb,YAAY;EACZc,QAAQ,EAAE;IACRC,UAAU,EAAEA,CACVC,KAAK,EACLC,MAKE,KACC;MACH,MAAM;QAAEC,OAAO;QAAEC,OAAO;QAAEC,MAAM;QAAEC;MAAS,CAAC,GAAGJ,MAAM,CAACK,OAAO;MAC7D,MAAMb,KAAK,GAAGO,KAAK,CAACf,MAAM,CAACsB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKP,OAAO,CAAC;MAC5D,IAAIT,KAAK,EAAE;QACTA,KAAK,CAACC,QAAQ,CAACgB,IAAI,CAAC;UAAEN,MAAM;UAAEC,QAAQ;UAAEF;QAAQ,CAAC,CAAC;MACpD;IACF,CAAC;IACDQ,SAAS,EAAEA,CACTX,KAAK,EACLC,MAKE,KACC;MACH,MAAM;QAAEC,OAAO;QAAEU,MAAM;QAAER,MAAM;QAAEC;MAAS,CAAC,GAAGJ,MAAM,CAACK,OAAO;MAC5D,MAAMb,KAAK,GAAGO,KAAK,CAACf,MAAM,CAACsB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKP,OAAO,CAAC;MAC5D,IAAIT,KAAK,EAAE;QACTA,KAAK,CAACE,OAAO,CAACe,IAAI,CAAC;UAAEN,MAAM;UAAEC,QAAQ;UAAEO;QAAO,CAAC,CAAC;MAClD;IACF;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC3B,WAAW,CAAC4B,OAAO,EAAGhB,KAAK,IAAK;MACvCA,KAAK,CAACd,OAAO,GAAG,IAAI;MACpBc,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD4B,OAAO,CAAC3B,WAAW,CAAC6B,SAAS,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACf,MAAM,GAAGgB,MAAM,CAACK,OAAO;IAC/B,CAAC,CAAC,CACDS,OAAO,CAAC3B,WAAW,CAAC8B,QAAQ,EAAE,CAAClB,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAGc,MAAM,CAACd,KAAK,CAACgC,OAAO,IAAI,wBAAwB;IAChE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEpB,UAAU;EAAEY;AAAU,CAAC,GAAGf,WAAW,CAACwB,OAAO;AAC5D,eAAexB,WAAW,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}