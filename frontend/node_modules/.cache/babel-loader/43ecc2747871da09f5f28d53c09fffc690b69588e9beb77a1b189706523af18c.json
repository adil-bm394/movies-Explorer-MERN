{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  favorites: [],\n  loading: false,\n  error: null\n};\nexport const addFavorite = createAsyncThunk(\"favorites/addFavorite\", async (movie, {\n  rejectWithValue,\n  getState\n}) => {\n  const state = getState();\n  const userId = state.user.userId; // assuming you have userId in your state\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/v1/addFavorite\", {\n      userId,\n      movieId: movie.imdbID\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data : error.message);\n  }\n});\nexport const removeFavorite = createAsyncThunk(\"favorites/removeFavorite\", async (imdbID, {\n  rejectWithValue,\n  getState\n}) => {\n  const state = getState();\n  const userId = state.user.userId; // assuming you have userId in your state\n  try {\n    const response = await axios.post(\"http://localhost:8000/api/v1/removeFavorite\", {\n      userId,\n      movieId: imdbID\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(addFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites.push(action.payload.movie);\n    }).addCase(addFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(removeFavorite.pending, state => {\n      state.loading = true;\n    }).addCase(removeFavorite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.favorites = state.favorites.filter(movie => movie.imdbID !== action.payload.movieId);\n    }).addCase(removeFavorite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","favorites","loading","error","addFavorite","movie","rejectWithValue","getState","state","userId","user","response","post","movieId","imdbID","data","message","removeFavorite","favoritesSlice","name","reducers","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","filter","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/favoritesSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Movie } from \"../../utils/interface/types\";\n\ninterface FavoritesState {\n  favorites: Movie[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: FavoritesState = {\n  favorites: [],\n  loading: false,\n  error: null,\n};\n\nexport const addFavorite = createAsyncThunk(\n  \"favorites/addFavorite\",\n  async (movie: Movie, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const userId = state.user.userId; // assuming you have userId in your state\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/v1/addFavorite\",\n        {\n          userId,\n          movieId: movie.imdbID,\n        }\n      );\n      return response.data;\n    } catch (error:any) {\n      return rejectWithValue(\n        error.response ? error.response.data : error.message\n      );\n    }\n  }\n);\n\nexport const removeFavorite = createAsyncThunk(\n  \"favorites/removeFavorite\",\n  async (imdbID: string, { rejectWithValue, getState }) => {\n    const state: any = getState();\n    const userId = state.user.userId; // assuming you have userId in your state\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/v1/removeFavorite\",\n        {\n          userId,\n          movieId: imdbID,\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(addFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(addFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites.push(action.payload.movie);\n      })\n      .addCase(addFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(removeFavorite.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(removeFavorite.fulfilled, (state, action) => {\n        state.loading = false;\n        state.favorites = state.favorites.filter(\n          (movie) => movie.imdbID !== action.payload.movieId\n        );\n      })\n      .addCase(removeFavorite.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport default favoritesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}