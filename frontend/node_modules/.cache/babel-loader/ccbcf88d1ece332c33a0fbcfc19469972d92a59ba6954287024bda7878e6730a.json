{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoggedIn: false,\n  userDetails: null\n};\nconst getInitialState = () => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\") || \"{}\");\n    return {\n      isLoggedIn: true,\n      userDetails: {\n        ...userDetails,\n        token\n      }\n    };\n  }\n  return initialState;\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: getInitialState(),\n  reducers: {\n    login: (state, action) => {\n      state.isLoggedIn = true;\n      state.userDetails = action.payload;\n      localStorage.setItem(\"authToken\", action.payload.token);\n      localStorage.setItem(\"userDetails\", JSON.stringify(action.payload));\n    },\n    logout: state => {\n      state.isLoggedIn = false;\n      state.userDetails = null;\n      // Remove token and user details from localStorage\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userDetails\");\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","userDetails","getInitialState","token","localStorage","getItem","JSON","parse","userSlice","name","reducers","login","state","action","payload","setItem","stringify","logout","removeItem","actions","reducer"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/redux/slices/userSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserState } from \"../../utils/interface/types\";\n\n\nconst initialState: UserState = {\n  isLoggedIn: false,\n  userDetails: null,\n};\n\nconst getInitialState = (): UserState => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\") || \"{}\");\n    return {\n      isLoggedIn: true,\n      userDetails: {\n        ...userDetails,\n        token,\n      },\n    };\n  }\n  return initialState;\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: getInitialState(),\n  reducers: {\n    login: (\n      state,\n      action: PayloadAction<{\n        id?: string;\n        name: string;\n        email: string;\n        phone: string;\n        token: string; \n      }>\n    ) => {\n      state.isLoggedIn = true;\n      state.userDetails = action.payload;\n      localStorage.setItem(\"authToken\", action.payload.token);\n      localStorage.setItem(\"userDetails\", JSON.stringify(action.payload));\n    },\n    logout: (state) => {\n      state.isLoggedIn = false;\n      state.userDetails = null;\n      // Remove token and user details from localStorage\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userDetails\");\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,MAAMC,YAAuB,GAAG;EAC9BC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAiB;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACT,MAAMF,WAAW,GAAGK,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC;IAC3E,OAAO;MACLL,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE;QACX,GAAGA,WAAW;QACdE;MACF;IACF,CAAC;EACH;EACA,OAAOJ,YAAY;AACrB,CAAC;AAED,MAAMS,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZV,YAAY,EAAEG,eAAe,CAAC,CAAC;EAC/BQ,QAAQ,EAAE;IACRC,KAAK,EAAEA,CACLC,KAAK,EACLC,MAME,KACC;MACHD,KAAK,CAACZ,UAAU,GAAG,IAAI;MACvBY,KAAK,CAACX,WAAW,GAAGY,MAAM,CAACC,OAAO;MAClCV,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEF,MAAM,CAACC,OAAO,CAACX,KAAK,CAAC;MACvDC,YAAY,CAACW,OAAO,CAAC,aAAa,EAAET,IAAI,CAACU,SAAS,CAACH,MAAM,CAACC,OAAO,CAAC,CAAC;IACrE,CAAC;IACDG,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACZ,UAAU,GAAG,KAAK;MACxBY,KAAK,CAACX,WAAW,GAAG,IAAI;MACxB;MACAG,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC;MACpCd,YAAY,CAACc,UAAU,CAAC,aAAa,CAAC;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,KAAK;EAAEM;AAAO,CAAC,GAAGT,SAAS,CAACW,OAAO;AAClD,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}