{"ast":null,"code":"var _jsxFileName = \"/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchRatings } from \"../../redux/slices/moviesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingComponent = ({\n  movieId,\n  onRatingClick,\n  initialRating,\n  userId,\n  userName\n}) => {\n  _s();\n  const [rating, setRating] = useState(initialRating);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  useEffect(() => {\n    const fetchRatingsData = async () => {\n      if (movieId) {\n        try {\n          const response = await dispatch(fetchRatings(movieId)).unwrap();\n          const userRating = response.ratings.find(r => r.userId === userId);\n          setRating(userRating ? userRating.rating : null);\n        } catch (error) {\n          console.error(\"Failed to fetch ratings\", error);\n        }\n      }\n    };\n    fetchRatingsData();\n  }, [movieId, dispatch, userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onRatingClick(rating || 0),\n      children: \"Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingComponent, \"KFQyd9ovEWKVnnaop806IVcJIdM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RatingComponent;\nexport default RatingComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingComponent\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","fetchRatings","jsxDEV","_jsxDEV","RatingComponent","movieId","onRatingClick","initialRating","userId","userName","_s","rating","setRating","dispatch","isLoggedIn","state","user","fetchRatingsData","response","unwrap","userRating","ratings","find","r","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohdadil/Desktop/MERN/movies-explorer-mern/frontend/src/components/Rating/RatingComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\nimport { fetchRatings } from \"../../redux/slices/moviesSlice\";\n\ninterface RatingComponentProps {\n  isLoggedIn: boolean;\n  initialRating: number | null;\n  movieId: string;\n  userId: string;\n  userName: string;\n  onRatingClick: (value: number) => void;\n}\n\nconst RatingComponent: React.FC<RatingComponentProps> = ({\n  movieId,\n  onRatingClick,\n  initialRating,\n  userId,\n  userName,\n}) => {\n  const [rating, setRating] = useState<number | null>(initialRating);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n\n  useEffect(() => {\n    const fetchRatingsData = async () => {\n      if (movieId) {\n        try {\n          const response = await dispatch(fetchRatings(movieId)).unwrap();\n          const userRating = response.ratings.find(\n            (r: { userId: string; rating: number }) => r.userId === userId\n          );\n          setRating(userRating ? userRating.rating : null);\n        } catch (error) {\n          console.error(\"Failed to fetch ratings\", error);\n        }\n      }\n    };\n\n    fetchRatingsData();\n  }, [movieId, dispatch, userId]);\n\n  return (\n    <div>\n      {/* Render rating component UI here */}\n      <button onClick={() => onRatingClick(rating || 0)}>Rate</button>\n    </div>\n  );\n};\n\nexport default RatingComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9D,MAAMC,eAA+C,GAAGA,CAAC;EACvDC,OAAO;EACPC,aAAa;EACbC,aAAa;EACbC,MAAM;EACNC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAgBU,aAAa,CAAC;EAClE,MAAMM,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,UAAU,GAAGf,WAAW,CAAEgB,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAE3EhB,SAAS,CAAC,MAAM;IACd,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAIZ,OAAO,EAAE;QACX,IAAI;UACF,MAAMa,QAAQ,GAAG,MAAML,QAAQ,CAACZ,YAAY,CAACI,OAAO,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC;UAC/D,MAAMC,UAAU,GAAGF,QAAQ,CAACG,OAAO,CAACC,IAAI,CACrCC,CAAqC,IAAKA,CAAC,CAACf,MAAM,KAAKA,MAC1D,CAAC;UACDI,SAAS,CAACQ,UAAU,GAAGA,UAAU,CAACT,MAAM,GAAG,IAAI,CAAC;QAClD,CAAC,CAAC,OAAOa,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACZ,OAAO,EAAEQ,QAAQ,EAAEL,MAAM,CAAC,CAAC;EAE/B,oBACEL,OAAA;IAAAuB,QAAA,eAEEvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMrB,aAAa,CAACK,MAAM,IAAI,CAAC,CAAE;MAAAe,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnCIN,eAA+C;EAAA,QAQlCJ,WAAW,EACTD,WAAW;AAAA;AAAAiC,EAAA,GAT1B5B,eAA+C;AAqCrD,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}